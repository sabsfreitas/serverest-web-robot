<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.13.7 on win32)" generated="2025-10-03T00:09:01.037444" rpa="false" schemaversion="5">
<suite id="s1" name="Tests" source="D:\Documentos\COMPASS\serverest-web-robot\tests">
<suite id="s1-s1" name="Carrinho" source="D:\Documentos\COMPASS\serverest-web-robot\tests\carrinho.robot">
<kw name="Setup e Autenticar na Suite" owner="login" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:01.421070" level="INFO">Creating Session using : alias=serverest, url=http://13.218.59.237:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>serverest</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-03T00:09:01.420859" elapsed="0.001185"/>
</kw>
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.425467" level="INFO">${timestamp} = 1759460941</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:01.423899" elapsed="0.001689"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.426353" level="INFO">${microseconds} = 426248</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:01.425885" elapsed="0.000506"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.426836" level="INFO">${random} = 3408</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:01.426557" elapsed="0.000307"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.427206" level="INFO">${unique_email} = qa17594609414262483408@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:01.426998" elapsed="0.000233"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T00:09:01.427283" elapsed="0.000050"/>
</return>
<msg time="2025-10-03T00:09:01.427460" level="INFO">${email} = qa17594609414262483408@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T00:09:01.423711" elapsed="0.003771"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.428052" level="INFO">${payload} = {'nome': 'QA User', 'email': 'qa17594609414262483408@exemplo.com', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:01.427601" elapsed="0.000481"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:01.739995" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '112', 'Content-Type': 'application/json'} 
 body=b'{"nome": "QA User", "email": "qa17594609414262483408@exemplo.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T00:09:01.740112" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:01 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "aSJjX6WBqdyfftP5"
} 
 </msg>
<msg time="2025-10-03T00:09:01.740237" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:01.428217" elapsed="0.312046"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.740811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:01.740400" elapsed="0.000463"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:01.740966" elapsed="0.000405"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:01.741471" elapsed="0.000403"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:01.741974" elapsed="0.000428"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T00:09:01.742601" level="INFO">${USER_EMAIL} = qa17594609414262483408@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T00:09:01.742458" elapsed="0.000168"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T00:09:01.742773" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T00:09:01.742673" elapsed="0.000122"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T00:09:01.742835" elapsed="0.000034"/>
</return>
<msg time="2025-10-03T00:09:01.743030" level="INFO">${response_cadastro} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T00:09:01.743068" level="INFO">${email} = qa17594609414262483408@exemplo.com</msg>
<var>${response_cadastro}</var>
<var>${email}</var>
<arg>${nome_usuario}</arg>
<arg>${isAdmin}</arg>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T00:09:01.423254" elapsed="0.319834"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T00:09:01.743219" level="INFO">${USER_EMAIL} = qa17594609414262483408@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T00:09:01.743136" elapsed="0.000104"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T00:09:01.743352" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T00:09:01.743273" elapsed="0.000101"/>
</variable>
<kw name="Realizar Login Com Usuário Cadastrado" owner="login">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.743949" level="INFO">${payload} = {'email': 'qa17594609414262483408@exemplo.com', 'password': '12345'}</msg>
<var>${payload}</var>
<arg>email=${USER_EMAIL}</arg>
<arg>password=${USER_PASS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:01.743712" elapsed="0.000263"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:01.893318" level="INFO">POST Request : url=http://13.218.59.237:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"email": "qa17594609414262483408@exemplo.com", "password": "12345"}' 
 </msg>
<msg time="2025-10-03T00:09:01.893399" level="INFO">POST Response : url=http://13.218.59.237:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '293', 'Date': 'Fri, 03 Oct 2025 03:09:01 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0dgFLS_MYP7LzsUIv7Ge-XcVvMr3ac4yJ3c2DJ5U"
} 
 </msg>
<msg time="2025-10-03T00:09:01.893516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:01.744671" elapsed="0.148876"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.894428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:01.893685" elapsed="0.000865"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>authorization</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:01.894773" elapsed="0.001150"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.896824" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0dgFLS_MYP7LzsUIv7Ge...</msg>
<var>${token}</var>
<arg>${response.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:01.896118" elapsed="0.000752"/>
</kw>
<variable name="${AUTH_TOKEN}" scope="SUITE">
<msg time="2025-10-03T00:09:01.897094" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0dgFLS_MYP7LzsUIv7Ge...</msg>
<var>${token}</var>
<status status="PASS" start="2025-10-03T00:09:01.896959" elapsed="0.000167"/>
</variable>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:01.897269" elapsed="0.000050"/>
</return>
<msg time="2025-10-03T00:09:01.897492" level="INFO">${response_login} = &lt;Response [200]&gt;</msg>
<var>${response_login}</var>
<doc>Realiza login com um usuário válido.</doc>
<status status="PASS" start="2025-10-03T00:09:01.743549" elapsed="0.153974"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.898178" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0dgFLS_MYP7LzsUIv7Ge...</msg>
<var>${token}</var>
<arg>${response_login.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:01.897669" elapsed="0.000538"/>
</kw>
<variable name="${AUTH_TOKEN}" scope="SUITE">
<msg time="2025-10-03T00:09:01.898367" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0dgFLS_MYP7LzsUIv7Ge...</msg>
<var>${token}</var>
<status status="PASS" start="2025-10-03T00:09:01.898262" elapsed="0.000129"/>
</variable>
<doc>Cria sessão, cadastra usuário, faz login e salva credenciais/token no escopo da suíte.</doc>
<status status="PASS" start="2025-10-03T00:09:01.420196" elapsed="0.478252"/>
</kw>
<test id="s1-s1-t1" name="Cenário 01: Cadastrar Produto ao Carrinho" line="13">
<kw name="Adicionar Produto no Carrinho" owner="carrinho">
<kw name="Cadastrar Novo Produto" owner="produto">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Gerar Nome Produto Único" owner="produto">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.900540" level="INFO">${timestamp} = 1759460941</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:01.900363" elapsed="0.000204"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.900950" level="INFO">${microseconds} = 900880</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:01.900704" elapsed="0.000275"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.901330" level="INFO">${random} = 1403</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:01.901091" elapsed="0.000268"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.901678" level="INFO">${unique_name} = Produto17594609419008801403</msg>
<var>${unique_name}</var>
<arg>Produto${timestamp}${microseconds}${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:01.901480" elapsed="0.000224"/>
</kw>
<return>
<value>${unique_name}</value>
<status status="PASS" start="2025-10-03T00:09:01.901755" elapsed="0.000037"/>
</return>
<doc>Gera um nome de produto único baseado no timestamp com milissegundos e número aleatório.</doc>
<status status="PASS" start="2025-10-03T00:09:01.900163" elapsed="0.001731"/>
</kw>
<msg time="2025-10-03T00:09:01.901970" level="INFO">${nome_produto} = Produto17594609419008801403</msg>
<var>${nome_produto}</var>
<arg>'${nome}' == 'None'</arg>
<arg>Gerar Nome Produto Único</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${nome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-03T00:09:01.899872" elapsed="0.002121"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.902429" level="INFO">${payload} = {'nome': 'Produto17594609419008801403', 'preco': '199', 'descricao': 'Produto de Teste', 'quantidade': '10'}</msg>
<var>${payload}</var>
<arg>nome=${nome_produto}</arg>
<arg>preco=${preco}</arg>
<arg>descricao=${descricao}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:01.902136" elapsed="0.000318"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:01.902882" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:01.902698" elapsed="0.000210"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:02.053699" level="INFO">POST Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0dgFLS_MYP7LzsUIv7Ge-XcVvMr3ac4yJ3c2DJ5U', 'Content-Length': '108', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto17594609419008801403", "preco": "199", "descricao": "Produto de Teste", "quantidade": "10"}' 
 </msg>
<msg time="2025-10-03T00:09:02.053782" level="INFO">POST Response : url=http://13.218.59.237:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:01 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Ks3wSkGAknYfMl6x"
} 
 </msg>
<msg time="2025-10-03T00:09:02.053897" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:01.903001" elapsed="0.150921"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.055832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:02.054338" elapsed="0.001601"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.056104" elapsed="0.000588"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.056931" elapsed="0.000698"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*realizado.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:02.057753" elapsed="0.000491"/>
</kw>
<return>
<value>${response}</value>
<value>${nome_produto}</value>
<status status="PASS" start="2025-10-03T00:09:02.058296" elapsed="0.000034"/>
</return>
<msg time="2025-10-03T00:09:02.058490" level="INFO">${response_produto} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T00:09:02.058530" level="INFO">${nome_produto} = Produto17594609419008801403</msg>
<var>${response_produto}</var>
<var>${nome_produto}</var>
<arg>${token}</arg>
<doc>Cadastra um produto válido. Se o nome não for passado, gera um automaticamente.
Requer um token de autenticação como argumento.</doc>
<status status="PASS" start="2025-10-03T00:09:01.899541" elapsed="0.159009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.059046" level="INFO">${produto_id} = Ks3wSkGAknYfMl6x</msg>
<var>${produto_id}</var>
<arg>${response_produto.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:02.058663" elapsed="0.000408"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.059402" level="INFO">${produto_item} = {'idProduto': 'Ks3wSkGAknYfMl6x', 'quantidade': '1'}</msg>
<var>${produto_item}</var>
<arg>idProduto=${produto_id}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.059178" elapsed="0.000248"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.059658" level="INFO">${produtos_array} = [{'idProduto': 'Ks3wSkGAknYfMl6x', 'quantidade': '1'}]</msg>
<var>${produtos_array}</var>
<arg>${produto_item}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-10-03T00:09:02.059518" elapsed="0.000163"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.059953" level="INFO">${payload} = {'produtos': [{'idProduto': 'Ks3wSkGAknYfMl6x', 'quantidade': '1'}]}</msg>
<var>${payload}</var>
<arg>produtos=${produtos_array}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.059778" elapsed="0.000199"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.060236" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.060071" elapsed="0.000189"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:02.212526" level="INFO">POST Request : url=http://13.218.59.237:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0dgFLS_MYP7LzsUIv7Ge-XcVvMr3ac4yJ3c2DJ5U', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"produtos": [{"idProduto": "Ks3wSkGAknYfMl6x", "quantidade": "1"}]}' 
 </msg>
<msg time="2025-10-03T00:09:02.212619" level="INFO">POST Response : url=http://13.218.59.237:3000/carrinhos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:02 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "N5x6Sx7GKU3jSkML"
} 
 </msg>
<msg time="2025-10-03T00:09:02.212736" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/carrinhos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:02.060349" elapsed="0.152411"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.213441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:02.212972" elapsed="0.000524"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.213618" elapsed="0.001103"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*realizado.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:02.215002" elapsed="0.000694"/>
</kw>
<return>
<value>${response}</value>
<value>${produto_id}</value>
<status status="PASS" start="2025-10-03T00:09:02.215771" elapsed="0.000039"/>
</return>
<arg>${AUTH_TOKEN}</arg>
<doc>Adiciona um produto ao carrinho de um usuário</doc>
<status status="PASS" start="2025-10-03T00:09:01.899155" elapsed="0.316839"/>
</kw>
<doc>Testa adicionar um produto ao carrinho de um usuário</doc>
<tag>adicionar</tag>
<tag>carrinho</tag>
<tag>positivo</tag>
<status status="PASS" start="2025-10-03T00:09:01.898516" elapsed="0.318079"/>
</test>
<test id="s1-s1-t2" name="Cenário 02: Concluir Compra" line="18">
<kw name="Concluir Compra" owner="carrinho">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.218973" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.218140" elapsed="0.000869"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:02.367609" level="INFO">DELETE Request : url=http://13.218.59.237:3000/carrinhos/concluir-compra 
 path_url=/carrinhos/concluir-compra 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0dgFLS_MYP7LzsUIv7Ge-XcVvMr3ac4yJ3c2DJ5U', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-10-03T00:09:02.367694" level="INFO">DELETE Response : url=http://13.218.59.237:3000/carrinhos/concluir-compra 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 03 Oct 2025 03:09:02 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg time="2025-10-03T00:09:02.367824" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/carrinhos/concluir-compra</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:02.219134" elapsed="0.148716"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.368422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:02.368016" elapsed="0.000457"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.368581" elapsed="0.000414"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)registro.*excluído.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:02.369097" elapsed="0.000445"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:02.369594" elapsed="0.000032"/>
</return>
<arg>${AUTH_TOKEN}</arg>
<doc>Conclui a compra do carrinho de um usuário</doc>
<status status="PASS" start="2025-10-03T00:09:02.217851" elapsed="0.151868"/>
</kw>
<doc>Testa concluir a compra do carrinho de um usuário</doc>
<tag>carrinho</tag>
<tag>concluir</tag>
<tag>positivo</tag>
<status status="PASS" start="2025-10-03T00:09:02.217355" elapsed="0.152584"/>
</test>
<test id="s1-s1-t3" name="Cenário 03: Cancelar Compra" line="23">
<kw name="Cancelar Compra" owner="carrinho">
<kw name="Adicionar Produto no Carrinho" owner="carrinho">
<kw name="Cadastrar Novo Produto" owner="produto">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Gerar Nome Produto Único" owner="produto">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.372285" level="INFO">${timestamp} = 1759460942</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:02.372122" elapsed="0.000189"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.372603" level="INFO">${microseconds} = 372551</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:02.372408" elapsed="0.000219"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.372896" level="INFO">${random} = 9087</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:02.372719" elapsed="0.000200"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.373204" level="INFO">${unique_name} = Produto17594609423725519087</msg>
<var>${unique_name}</var>
<arg>Produto${timestamp}${microseconds}${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:02.373032" elapsed="0.000195"/>
</kw>
<return>
<value>${unique_name}</value>
<status status="PASS" start="2025-10-03T00:09:02.373272" elapsed="0.000033"/>
</return>
<doc>Gera um nome de produto único baseado no timestamp com milissegundos e número aleatório.</doc>
<status status="PASS" start="2025-10-03T00:09:02.371933" elapsed="0.001460"/>
</kw>
<msg time="2025-10-03T00:09:02.373463" level="INFO">${nome_produto} = Produto17594609423725519087</msg>
<var>${nome_produto}</var>
<arg>'${nome}' == 'None'</arg>
<arg>Gerar Nome Produto Único</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${nome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-03T00:09:02.371665" elapsed="0.001819"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.374384" level="INFO">${payload} = {'nome': 'Produto17594609423725519087', 'preco': '199', 'descricao': 'Produto de Teste', 'quantidade': '10'}</msg>
<var>${payload}</var>
<arg>nome=${nome_produto}</arg>
<arg>preco=${preco}</arg>
<arg>descricao=${descricao}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.373593" elapsed="0.000849"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.375459" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.374905" elapsed="0.000594"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:02.526164" level="INFO">POST Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0dgFLS_MYP7LzsUIv7Ge-XcVvMr3ac4yJ3c2DJ5U', 'Content-Length': '108', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto17594609423725519087", "preco": "199", "descricao": "Produto de Teste", "quantidade": "10"}' 
 </msg>
<msg time="2025-10-03T00:09:02.526245" level="INFO">POST Response : url=http://13.218.59.237:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:02 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Dz3PAcOBhn3XvTpI"
} 
 </msg>
<msg time="2025-10-03T00:09:02.526358" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:02.375653" elapsed="0.150730"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.526943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:02.526522" elapsed="0.000471"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.527095" elapsed="0.000435"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.527631" elapsed="0.000398"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*realizado.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:02.528129" elapsed="0.000373"/>
</kw>
<return>
<value>${response}</value>
<value>${nome_produto}</value>
<status status="PASS" start="2025-10-03T00:09:02.528553" elapsed="0.000031"/>
</return>
<msg time="2025-10-03T00:09:02.528736" level="INFO">${response_produto} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T00:09:02.528775" level="INFO">${nome_produto} = Produto17594609423725519087</msg>
<var>${response_produto}</var>
<var>${nome_produto}</var>
<arg>${token}</arg>
<doc>Cadastra um produto válido. Se o nome não for passado, gera um automaticamente.
Requer um token de autenticação como argumento.</doc>
<status status="PASS" start="2025-10-03T00:09:02.371389" elapsed="0.157407"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.529269" level="INFO">${produto_id} = Dz3PAcOBhn3XvTpI</msg>
<var>${produto_id}</var>
<arg>${response_produto.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:02.528897" elapsed="0.000397"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.529635" level="INFO">${produto_item} = {'idProduto': 'Dz3PAcOBhn3XvTpI', 'quantidade': '1'}</msg>
<var>${produto_item}</var>
<arg>idProduto=${produto_id}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.529397" elapsed="0.000263"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.529881" level="INFO">${produtos_array} = [{'idProduto': 'Dz3PAcOBhn3XvTpI', 'quantidade': '1'}]</msg>
<var>${produtos_array}</var>
<arg>${produto_item}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-10-03T00:09:02.529751" elapsed="0.000153"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.530169" level="INFO">${payload} = {'produtos': [{'idProduto': 'Dz3PAcOBhn3XvTpI', 'quantidade': '1'}]}</msg>
<var>${payload}</var>
<arg>produtos=${produtos_array}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.529995" elapsed="0.000198"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.530447" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.530283" elapsed="0.000187"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:02.679371" level="INFO">POST Request : url=http://13.218.59.237:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0dgFLS_MYP7LzsUIv7Ge-XcVvMr3ac4yJ3c2DJ5U', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"produtos": [{"idProduto": "Dz3PAcOBhn3XvTpI", "quantidade": "1"}]}' 
 </msg>
<msg time="2025-10-03T00:09:02.679453" level="INFO">POST Response : url=http://13.218.59.237:3000/carrinhos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:02 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "M0jT0CAfK6vOP8bk"
} 
 </msg>
<msg time="2025-10-03T00:09:02.679565" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/carrinhos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:02.530560" elapsed="0.149086"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.680215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:02.679787" elapsed="0.000482"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.680378" elapsed="0.000446"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*realizado.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:02.680926" elapsed="0.000379"/>
</kw>
<return>
<value>${response}</value>
<value>${produto_id}</value>
<status status="PASS" start="2025-10-03T00:09:02.681356" elapsed="0.000031"/>
</return>
<msg time="2025-10-03T00:09:02.681540" level="INFO">${response_carrinho} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T00:09:02.681579" level="INFO">${produto_id} = Dz3PAcOBhn3XvTpI</msg>
<var>${response_carrinho}</var>
<var>${produto_id}</var>
<arg>${token}</arg>
<doc>Adiciona um produto ao carrinho de um usuário</doc>
<status status="PASS" start="2025-10-03T00:09:02.371086" elapsed="0.310513"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.681888" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.681704" elapsed="0.000209"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:02.834198" level="INFO">DELETE Request : url=http://13.218.59.237:3000/carrinhos/cancelar-compra 
 path_url=/carrinhos/cancelar-compra 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MTQyNjI0ODM0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQxLCJleHAiOjE3NTk0NjE1NDF9.DeV0dgFLS_MYP7LzsUIv7Ge-XcVvMr3ac4yJ3c2DJ5U', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-10-03T00:09:02.834285" level="INFO">DELETE Response : url=http://13.218.59.237:3000/carrinhos/cancelar-compra 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '86', 'Date': 'Fri, 03 Oct 2025 03:09:02 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso. Estoque dos produtos reabastecido"
} 
 </msg>
<msg time="2025-10-03T00:09:02.834405" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/carrinhos/cancelar-compra</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:02.682006" elapsed="0.152423"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.835015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:02.834569" elapsed="0.000499"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.835179" elapsed="0.000432"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)registro.*excluído.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:02.835716" elapsed="0.000368"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:02.836137" elapsed="0.000037"/>
</return>
<arg>${AUTH_TOKEN}</arg>
<doc>Cancela a compra do carrinho de um usuário</doc>
<status status="PASS" start="2025-10-03T00:09:02.370770" elapsed="0.465499"/>
</kw>
<doc>Testa cancelar a compra do carrinho de um usuário</doc>
<tag>cancelar</tag>
<tag>carrinho</tag>
<tag>positivo</tag>
<status status="PASS" start="2025-10-03T00:09:02.370332" elapsed="0.466188"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-10-03T00:09:02.837250" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-10-03T00:09:02.837165" elapsed="0.000169"/>
</kw>
<doc>Testes de ações com Carrinho.</doc>
<status status="PASS" start="2025-10-03T00:09:01.077256" elapsed="1.760114"/>
</suite>
<suite id="s1-s2" name="Login" source="D:\Documentos\COMPASS\serverest-web-robot\tests\login.robot">
<kw name="Setup e Autenticar na Suite" owner="login" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:02.850531" level="INFO">Creating Session using : alias=serverest, url=http://13.218.59.237:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>serverest</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-03T00:09:02.850384" elapsed="0.000335"/>
</kw>
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.852311" level="INFO">${timestamp} = 1759460942</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:02.851899" elapsed="0.000450"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.852708" level="INFO">${microseconds} = 852649</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:02.852471" elapsed="0.000262"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.853029" level="INFO">${random} = 3452</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:02.852835" elapsed="0.000230"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.853346" level="INFO">${unique_email} = qa17594609428526493452@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:02.853166" elapsed="0.000204"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T00:09:02.853594" elapsed="0.000066"/>
</return>
<msg time="2025-10-03T00:09:02.853937" level="INFO">${email} = qa17594609428526493452@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T00:09:02.851566" elapsed="0.002740"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:02.854991" level="INFO">${payload} = {'nome': 'QA User', 'email': 'qa17594609428526493452@exemplo.com', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:02.854504" elapsed="0.000603"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:03.149012" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '112', 'Content-Type': 'application/json'} 
 body=b'{"nome": "QA User", "email": "qa17594609428526493452@exemplo.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T00:09:03.149090" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:02 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "Wg9tOw9zqSPDS10O"
} 
 </msg>
<msg time="2025-10-03T00:09:03.149206" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:02.855348" elapsed="0.293883"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.149776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:03.149364" elapsed="0.000467"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:03.149944" elapsed="0.000415"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:03.150456" elapsed="0.000374"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:03.150926" elapsed="0.000350"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T00:09:03.151441" level="INFO">${USER_EMAIL} = qa17594609428526493452@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T00:09:03.151329" elapsed="0.000136"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T00:09:03.151602" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T00:09:03.151504" elapsed="0.000121"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T00:09:03.151662" elapsed="0.000027"/>
</return>
<msg time="2025-10-03T00:09:03.151830" level="INFO">${response_cadastro} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T00:09:03.151866" level="INFO">${email} = qa17594609428526493452@exemplo.com</msg>
<var>${response_cadastro}</var>
<var>${email}</var>
<arg>${nome_usuario}</arg>
<arg>${isAdmin}</arg>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T00:09:02.850999" elapsed="0.300887"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T00:09:03.152014" level="INFO">${USER_EMAIL} = qa17594609428526493452@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T00:09:03.151933" elapsed="0.000101"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T00:09:03.152148" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T00:09:03.152069" elapsed="0.000098"/>
</variable>
<kw name="Realizar Login Com Usuário Cadastrado" owner="login">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.152735" level="INFO">${payload} = {'email': 'qa17594609428526493452@exemplo.com', 'password': '12345'}</msg>
<var>${payload}</var>
<arg>email=${USER_EMAIL}</arg>
<arg>password=${USER_PASS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:03.152511" elapsed="0.000248"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:03.304815" level="INFO">POST Request : url=http://13.218.59.237:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"email": "qa17594609428526493452@exemplo.com", "password": "12345"}' 
 </msg>
<msg time="2025-10-03T00:09:03.304918" level="INFO">POST Response : url=http://13.218.59.237:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '293', 'Date': 'Fri, 03 Oct 2025 03:09:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mjg1MjY0OTM0NTJAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQzLCJleHAiOjE3NTk0NjE1NDN9.T3jRMla7FZa50aqx222TRSCF0C1zi8_CalrnMjDnBvw"
} 
 </msg>
<msg time="2025-10-03T00:09:03.305060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:03.152860" elapsed="0.152228"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.305720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:03.305243" elapsed="0.000536"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>authorization</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:03.305902" elapsed="0.000525"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.306990" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mjg1MjY0OTM0NTJAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQzLCJleHAiOjE3NTk0NjE1NDN9.T3jRMla7FZa50aqx222TRSC...</msg>
<var>${token}</var>
<arg>${response.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:03.306556" elapsed="0.000468"/>
</kw>
<variable name="${AUTH_TOKEN}" scope="SUITE">
<msg time="2025-10-03T00:09:03.307205" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mjg1MjY0OTM0NTJAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQzLCJleHAiOjE3NTk0NjE1NDN9.T3jRMla7FZa50aqx222TRSC...</msg>
<var>${token}</var>
<status status="PASS" start="2025-10-03T00:09:03.307083" elapsed="0.000150"/>
</variable>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:03.307279" elapsed="0.000037"/>
</return>
<msg time="2025-10-03T00:09:03.307441" level="INFO">${response_login} = &lt;Response [200]&gt;</msg>
<var>${response_login}</var>
<doc>Realiza login com um usuário válido.</doc>
<status status="PASS" start="2025-10-03T00:09:03.152349" elapsed="0.155131"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.308070" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mjg1MjY0OTM0NTJAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQzLCJleHAiOjE3NTk0NjE1NDN9.T3jRMla7FZa50aqx222TRSC...</msg>
<var>${token}</var>
<arg>${response_login.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:03.307607" elapsed="0.000493"/>
</kw>
<variable name="${AUTH_TOKEN}" scope="SUITE">
<msg time="2025-10-03T00:09:03.308253" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mjg1MjY0OTM0NTJAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQzLCJleHAiOjE3NTk0NjE1NDN9.T3jRMla7FZa50aqx222TRSC...</msg>
<var>${token}</var>
<status status="PASS" start="2025-10-03T00:09:03.308153" elapsed="0.000124"/>
</variable>
<doc>Cria sessão, cadastra usuário, faz login e salva credenciais/token no escopo da suíte.</doc>
<status status="PASS" start="2025-10-03T00:09:02.850061" elapsed="0.458272"/>
</kw>
<test id="s1-s2-t1" name="Cenário 01: Login com Usuário Válido" line="12">
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.309820" level="INFO">${timestamp} = 1759460943</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:03.309614" elapsed="0.000236"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.310218" level="INFO">${microseconds} = 310160</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:03.309981" elapsed="0.000263"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.310576" level="INFO">${random} = 7147</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:03.310351" elapsed="0.000250"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.310921" level="INFO">${unique_email} = qa17594609433101607147@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:03.310714" elapsed="0.000233"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T00:09:03.310995" elapsed="0.000036"/>
</return>
<msg time="2025-10-03T00:09:03.311148" level="INFO">${email} = qa17594609433101607147@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T00:09:03.309379" elapsed="0.001792"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.311570" level="INFO">${payload} = {'nome': 'QA User Automated', 'email': 'qa17594609433101607147@exemplo.com', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:03.311285" elapsed="0.000311"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:03.459168" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '122', 'Content-Type': 'application/json'} 
 body=b'{"nome": "QA User Automated", "email": "qa17594609433101607147@exemplo.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T00:09:03.459251" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "89SSF6AQ329PQrKr"
} 
 </msg>
<msg time="2025-10-03T00:09:03.459368" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:03.311703" elapsed="0.147690"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.459953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:03.459530" elapsed="0.000476"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:03.460126" elapsed="0.000444"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:03.460676" elapsed="0.000400"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:03.461180" elapsed="0.000364"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T00:09:03.461783" level="INFO">${USER_EMAIL} = qa17594609433101607147@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T00:09:03.461662" elapsed="0.000146"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T00:09:03.461943" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T00:09:03.461849" elapsed="0.000116"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T00:09:03.462002" elapsed="0.000030"/>
</return>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T00:09:03.309019" elapsed="0.153120"/>
</kw>
<kw name="Realizar Login Com Usuário Cadastrado" owner="login">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.462954" level="INFO">${payload} = {'email': 'qa17594609433101607147@exemplo.com', 'password': '12345'}</msg>
<var>${payload}</var>
<arg>email=${USER_EMAIL}</arg>
<arg>password=${USER_PASS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:03.462716" elapsed="0.000267"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:03.610039" level="INFO">POST Request : url=http://13.218.59.237:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"email": "qa17594609433101607147@exemplo.com", "password": "12345"}' 
 </msg>
<msg time="2025-10-03T00:09:03.610124" level="INFO">POST Response : url=http://13.218.59.237:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '293', 'Date': 'Fri, 03 Oct 2025 03:09:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MzMxMDE2MDcxNDdAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQzLCJleHAiOjE3NTk0NjE1NDN9.zIqiI75aXcKxnzW7DLtwt8dbJpGB_UilwC3LQbiGh3o"
} 
 </msg>
<msg time="2025-10-03T00:09:03.610240" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:03.463090" elapsed="0.147176"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.610846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:03.610402" elapsed="0.000496"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>authorization</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:03.611011" elapsed="0.000419"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.611935" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MzMxMDE2MDcxNDdAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQzLCJleHAiOjE3NTk0NjE1NDN9.zIqiI75aXcKxnzW7DLtwt8d...</msg>
<var>${token}</var>
<arg>${response.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:03.611539" elapsed="0.000424"/>
</kw>
<variable name="${AUTH_TOKEN}" scope="SUITE">
<msg time="2025-10-03T00:09:03.612121" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0MzMxMDE2MDcxNDdAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQzLCJleHAiOjE3NTk0NjE1NDN9.zIqiI75aXcKxnzW7DLtwt8d...</msg>
<var>${token}</var>
<status status="PASS" start="2025-10-03T00:09:03.612013" elapsed="0.000132"/>
</variable>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:03.612186" elapsed="0.000030"/>
</return>
<doc>Realiza login com um usuário válido.</doc>
<status status="PASS" start="2025-10-03T00:09:03.462467" elapsed="0.149837"/>
</kw>
<doc>Testa login com usuário cadastrado válido</doc>
<tag>critico</tag>
<tag>login</tag>
<tag>positivo</tag>
<status status="PASS" start="2025-10-03T00:09:03.308394" elapsed="0.304169"/>
</test>
<test id="s1-s2-t2" name="Cenário 02: Login com Senha Inválida" line="18">
<kw name="Realizar Login Com Credenciais Inválidas" owner="login">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.614349" level="INFO">${data} = {'email': 'qa17594609433101607147@exemplo.com', 'password': 'senha_errada'}</msg>
<var>${data}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:03.613955" elapsed="0.000432"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:03.763952" level="INFO">POST Request : url=http://13.218.59.237:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '75', 'Content-Type': 'application/json'} 
 body=b'{"email": "qa17594609433101607147@exemplo.com", "password": "senha_errada"}' 
 </msg>
<msg time="2025-10-03T00:09:03.764058" level="INFO">POST Response : url=http://13.218.59.237:3000/login 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '48', 'Date': 'Fri, 03 Oct 2025 03:09:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Email e/ou senha inválidos"
} 
 </msg>
<msg time="2025-10-03T00:09:03.764201" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${data}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:03.614513" elapsed="0.149714"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.764902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:03.764391" elapsed="0.000583"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:03.765139" elapsed="0.000537"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)email.*ou.*senha.*inválido</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:03.765836" elapsed="0.000584"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:03.766565" elapsed="0.000042"/>
</return>
<arg>${USER_EMAIL}</arg>
<arg>senha_errada</arg>
<doc>Tenta realizar login com credenciais inválidas.</doc>
<status status="PASS" start="2025-10-03T00:09:03.613669" elapsed="0.153061"/>
</kw>
<doc>Testa login com senha incorreta</doc>
<tag>alto</tag>
<tag>login</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-10-03T00:09:03.613139" elapsed="0.154085"/>
</test>
<test id="s1-s2-t3" name="Cenário 03: Login com E-mail Inexistente" line="23">
<kw name="Realizar Login Com Credenciais Inválidas" owner="login">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.768975" level="INFO">${data} = {'email': 'usuario_inexistente@teste.com', 'password': '12345'}</msg>
<var>${data}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:03.768728" elapsed="0.000278"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:03.926993" level="INFO">POST Request : url=http://13.218.59.237:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '63', 'Content-Type': 'application/json'} 
 body=b'{"email": "usuario_inexistente@teste.com", "password": "12345"}' 
 </msg>
<msg time="2025-10-03T00:09:03.927086" level="INFO">POST Response : url=http://13.218.59.237:3000/login 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '48', 'Date': 'Fri, 03 Oct 2025 03:09:03 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Email e/ou senha inválidos"
} 
 </msg>
<msg time="2025-10-03T00:09:03.927213" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${data}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:03.769123" elapsed="0.158116"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.927807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:03.927388" elapsed="0.000470"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:03.927981" elapsed="0.000475"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)email.*ou.*senha.*inválido</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:03.928572" elapsed="0.000382"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:03.929008" elapsed="0.000032"/>
</return>
<arg>usuario_inexistente@teste.com</arg>
<arg>${VALID_PASSWORD}</arg>
<doc>Tenta realizar login com credenciais inválidas.</doc>
<status status="PASS" start="2025-10-03T00:09:03.768373" elapsed="0.160761"/>
</kw>
<doc>Testa login com email não cadastrado</doc>
<tag>alto</tag>
<tag>login</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-10-03T00:09:03.767821" elapsed="0.161567"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-10-03T00:09:03.930094" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-10-03T00:09:03.930000" elapsed="0.000170"/>
</kw>
<doc>Testes de ações com Auth.</doc>
<status status="PASS" start="2025-10-03T00:09:02.838377" elapsed="1.091831"/>
</suite>
<suite id="s1-s3" name="Produtos" source="D:\Documentos\COMPASS\serverest-web-robot\tests\produtos.robot">
<kw name="Setup e Autenticar na Suite" owner="login" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:03.940053" level="INFO">Creating Session using : alias=serverest, url=http://13.218.59.237:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>serverest</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-03T00:09:03.939902" elapsed="0.000380"/>
</kw>
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.941509" level="INFO">${timestamp} = 1759460943</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:03.941228" elapsed="0.000326"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.941987" level="INFO">${microseconds} = 941916</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:03.941695" elapsed="0.000322"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.942376" level="INFO">${random} = 9408</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:03.942134" elapsed="0.000268"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.942865" level="INFO">${unique_email} = qa17594609439419169408@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:03.942522" elapsed="0.000380"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T00:09:03.943157" elapsed="0.000151"/>
</return>
<msg time="2025-10-03T00:09:03.943556" level="INFO">${email} = qa17594609439419169408@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T00:09:03.941000" elapsed="0.002680"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:03.944571" level="INFO">${payload} = {'nome': 'QA User', 'email': 'qa17594609439419169408@exemplo.com', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:03.944127" elapsed="0.000485"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:04.241001" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '112', 'Content-Type': 'application/json'} 
 body=b'{"nome": "QA User", "email": "qa17594609439419169408@exemplo.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T00:09:04.241154" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:04 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "HcLNyjSQy9uwZDgy"
} 
 </msg>
<msg time="2025-10-03T00:09:04.241280" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:03.944780" elapsed="0.296525"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.241871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:04.241448" elapsed="0.000481"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.242045" elapsed="0.000427"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.242580" elapsed="0.000392"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:04.243075" elapsed="0.000947"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T00:09:04.244206" level="INFO">${USER_EMAIL} = qa17594609439419169408@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T00:09:04.244085" elapsed="0.000148"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T00:09:04.244398" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T00:09:04.244279" elapsed="0.000143"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T00:09:04.244460" elapsed="0.000031"/>
</return>
<msg time="2025-10-03T00:09:04.244638" level="INFO">${response_cadastro} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T00:09:04.244675" level="INFO">${email} = qa17594609439419169408@exemplo.com</msg>
<var>${response_cadastro}</var>
<var>${email}</var>
<arg>${nome_usuario}</arg>
<arg>${isAdmin}</arg>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T00:09:03.940560" elapsed="0.304135"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T00:09:04.244827" level="INFO">${USER_EMAIL} = qa17594609439419169408@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T00:09:04.244744" elapsed="0.000104"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T00:09:04.244962" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T00:09:04.244882" elapsed="0.000100"/>
</variable>
<kw name="Realizar Login Com Usuário Cadastrado" owner="login">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.245556" level="INFO">${payload} = {'email': 'qa17594609439419169408@exemplo.com', 'password': '12345'}</msg>
<var>${payload}</var>
<arg>email=${USER_EMAIL}</arg>
<arg>password=${USER_PASS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.245330" elapsed="0.000252"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:04.394745" level="INFO">POST Request : url=http://13.218.59.237:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"email": "qa17594609439419169408@exemplo.com", "password": "12345"}' 
 </msg>
<msg time="2025-10-03T00:09:04.394829" level="INFO">POST Response : url=http://13.218.59.237:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '293', 'Date': 'Fri, 03 Oct 2025 03:09:04 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mzk0MTkxNjk0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ0LCJleHAiOjE3NTk0NjE1NDR9._BD3IOAIQ3bK1Q8KZdFw3N-YZEG5c2-8FN5iz4COVlc"
} 
 </msg>
<msg time="2025-10-03T00:09:04.394948" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:04.245677" elapsed="0.149297"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.395524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:04.395112" elapsed="0.000467"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>authorization</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.395688" elapsed="0.000427"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.396600" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mzk0MTkxNjk0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ0LCJleHAiOjE3NTk0NjE1NDR9._BD3IOAIQ3bK1Q8KZdFw3N-...</msg>
<var>${token}</var>
<arg>${response.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:04.396227" elapsed="0.000399"/>
</kw>
<variable name="${AUTH_TOKEN}" scope="SUITE">
<msg time="2025-10-03T00:09:04.396780" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mzk0MTkxNjk0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ0LCJleHAiOjE3NTk0NjE1NDR9._BD3IOAIQ3bK1Q8KZdFw3N-...</msg>
<var>${token}</var>
<status status="PASS" start="2025-10-03T00:09:04.396673" elapsed="0.000133"/>
</variable>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:04.396847" elapsed="0.000029"/>
</return>
<msg time="2025-10-03T00:09:04.396987" level="INFO">${response_login} = &lt;Response [200]&gt;</msg>
<var>${response_login}</var>
<doc>Realiza login com um usuário válido.</doc>
<status status="PASS" start="2025-10-03T00:09:04.245158" elapsed="0.151852"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.397562" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mzk0MTkxNjk0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ0LCJleHAiOjE3NTk0NjE1NDR9._BD3IOAIQ3bK1Q8KZdFw3N-...</msg>
<var>${token}</var>
<arg>${response_login.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:04.397170" elapsed="0.000418"/>
</kw>
<variable name="${AUTH_TOKEN}" scope="SUITE">
<msg time="2025-10-03T00:09:04.397727" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mzk0MTkxNjk0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ0LCJleHAiOjE3NTk0NjE1NDR9._BD3IOAIQ3bK1Q8KZdFw3N-...</msg>
<var>${token}</var>
<status status="PASS" start="2025-10-03T00:09:04.397634" elapsed="0.000116"/>
</variable>
<doc>Cria sessão, cadastra usuário, faz login e salva credenciais/token no escopo da suíte.</doc>
<status status="PASS" start="2025-10-03T00:09:03.939629" elapsed="0.458172"/>
</kw>
<test id="s1-s3-t1" name="Cenário 01: Cadastrar Produto com Sucesso" line="13">
<kw name="Cadastrar Novo Produto" owner="produto">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Gerar Nome Produto Único" owner="produto">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.399409" level="INFO">${timestamp} = 1759460944</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:04.399243" elapsed="0.000193"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.399734" level="INFO">${microseconds} = 399681</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:04.399536" elapsed="0.000222"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.400042" level="INFO">${random} = 6380</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:04.399850" elapsed="0.000216"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.400326" level="INFO">${unique_name} = Produto17594609443996816380</msg>
<var>${unique_name}</var>
<arg>Produto${timestamp}${microseconds}${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:04.400158" elapsed="0.000191"/>
</kw>
<return>
<value>${unique_name}</value>
<status status="PASS" start="2025-10-03T00:09:04.400393" elapsed="0.000031"/>
</return>
<doc>Gera um nome de produto único baseado no timestamp com milissegundos e número aleatório.</doc>
<status status="PASS" start="2025-10-03T00:09:04.399045" elapsed="0.001465"/>
</kw>
<msg time="2025-10-03T00:09:04.400575" level="INFO">${nome_produto} = Produto17594609443996816380</msg>
<var>${nome_produto}</var>
<arg>'${nome}' == 'None'</arg>
<arg>Gerar Nome Produto Único</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${nome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-03T00:09:04.398783" elapsed="0.001814"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.400970" level="INFO">${payload} = {'nome': 'Produto17594609443996816380', 'preco': '199', 'descricao': 'Produto de Teste', 'quantidade': '10'}</msg>
<var>${payload}</var>
<arg>nome=${nome_produto}</arg>
<arg>preco=${preco}</arg>
<arg>descricao=${descricao}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.400702" elapsed="0.000293"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.401269" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mzk0MTkxNjk0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ0LCJleHAiOjE3NTk0NjE1NDR9._BD3...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.401098" elapsed="0.000196"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:04.550010" level="INFO">POST Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mzk0MTkxNjk0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ0LCJleHAiOjE3NTk0NjE1NDR9._BD3IOAIQ3bK1Q8KZdFw3N-YZEG5c2-8FN5iz4COVlc', 'Content-Length': '108', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto17594609443996816380", "preco": "199", "descricao": "Produto de Teste", "quantidade": "10"}' 
 </msg>
<msg time="2025-10-03T00:09:04.550091" level="INFO">POST Response : url=http://13.218.59.237:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:04 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ZqKqqYJk5zQLdvew"
} 
 </msg>
<msg time="2025-10-03T00:09:04.550210" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:04.401384" elapsed="0.148850"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.550804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:04.550369" elapsed="0.000486"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.550974" elapsed="0.000463"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.551544" elapsed="0.000409"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*realizado.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:04.552060" elapsed="0.000378"/>
</kw>
<return>
<value>${response}</value>
<value>${nome_produto}</value>
<status status="PASS" start="2025-10-03T00:09:04.552489" elapsed="0.000031"/>
</return>
<arg>${AUTH_TOKEN}</arg>
<doc>Cadastra um produto válido. Se o nome não for passado, gera um automaticamente.
Requer um token de autenticação como argumento.</doc>
<status status="PASS" start="2025-10-03T00:09:04.398452" elapsed="0.154184"/>
</kw>
<doc>Testa o cadastro de um produto com sucesso usando o token global</doc>
<tag>cadastro</tag>
<tag>positivo</tag>
<tag>produto</tag>
<status status="PASS" start="2025-10-03T00:09:04.397855" elapsed="0.155183"/>
</test>
<test id="s1-s3-t2" name="Cenário 02: Cadastrar Produto com Nome Duplicado" line="18">
<kw name="Cadastrar Novo Produto" owner="produto">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Gerar Nome Produto Único" owner="produto">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.555165" level="INFO">${timestamp} = 1759460944</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:04.554997" elapsed="0.000195"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.555488" level="INFO">${microseconds} = 555435</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:04.555290" elapsed="0.000222"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.555797" level="INFO">${random} = 3934</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:04.555607" elapsed="0.000214"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.556082" level="INFO">${unique_name} = Produto17594609445554353934</msg>
<var>${unique_name}</var>
<arg>Produto${timestamp}${microseconds}${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:04.555916" elapsed="0.000190"/>
</kw>
<return>
<value>${unique_name}</value>
<status status="PASS" start="2025-10-03T00:09:04.556150" elapsed="0.000033"/>
</return>
<doc>Gera um nome de produto único baseado no timestamp com milissegundos e número aleatório.</doc>
<status status="PASS" start="2025-10-03T00:09:04.554802" elapsed="0.001466"/>
</kw>
<msg time="2025-10-03T00:09:04.556335" level="INFO">${nome_produto} = Produto17594609445554353934</msg>
<var>${nome_produto}</var>
<arg>'${nome}' == 'None'</arg>
<arg>Gerar Nome Produto Único</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${nome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-03T00:09:04.554531" elapsed="0.001826"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.556739" level="INFO">${payload} = {'nome': 'Produto17594609445554353934', 'preco': '199', 'descricao': 'Produto de Teste', 'quantidade': '10'}</msg>
<var>${payload}</var>
<arg>nome=${nome_produto}</arg>
<arg>preco=${preco}</arg>
<arg>descricao=${descricao}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.556465" elapsed="0.000299"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.557033" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mzk0MTkxNjk0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ0LCJleHAiOjE3NTk0NjE1NDR9._BD3...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.556867" elapsed="0.000190"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:04.708896" level="INFO">POST Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mzk0MTkxNjk0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ0LCJleHAiOjE3NTk0NjE1NDR9._BD3IOAIQ3bK1Q8KZdFw3N-YZEG5c2-8FN5iz4COVlc', 'Content-Length': '108', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto17594609445554353934", "preco": "199", "descricao": "Produto de Teste", "quantidade": "10"}' 
 </msg>
<msg time="2025-10-03T00:09:04.708979" level="INFO">POST Response : url=http://13.218.59.237:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:04 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "dhpY6lvKjIsyTOko"
} 
 </msg>
<msg time="2025-10-03T00:09:04.709094" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:04.557150" elapsed="0.151969"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.709700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:04.709264" elapsed="0.000489"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.709874" elapsed="0.000457"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.710438" elapsed="0.000410"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*realizado.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:04.710952" elapsed="0.000383"/>
</kw>
<return>
<value>${response}</value>
<value>${nome_produto}</value>
<status status="PASS" start="2025-10-03T00:09:04.711388" elapsed="0.000031"/>
</return>
<msg time="2025-10-03T00:09:04.711570" level="INFO">${response1} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T00:09:04.711609" level="INFO">${nome_produto} = Produto17594609445554353934</msg>
<var>${response1}</var>
<var>${nome_produto}</var>
<arg>${AUTH_TOKEN}</arg>
<doc>Cadastra um produto válido. Se o nome não for passado, gera um automaticamente.
Requer um token de autenticação como argumento.</doc>
<status status="PASS" start="2025-10-03T00:09:04.554186" elapsed="0.157443"/>
</kw>
<kw name="Cadastrar Produto com Nome Duplicado" owner="produto">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.712541" level="INFO">${payload} = {'nome': 'Produto17594609445554353934', 'preco': '150', 'descricao': 'Produto Duplicado Teste', 'quantidade': '5'}</msg>
<var>${payload}</var>
<arg>nome=${nome_existente}</arg>
<arg>preco=150</arg>
<arg>descricao=Produto Duplicado Teste</arg>
<arg>quantidade=5</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.712304" elapsed="0.000265"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.712920" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mzk0MTkxNjk0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ0LCJleHAiOjE3NTk0NjE1NDR9._BD3...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.712680" elapsed="0.000401"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:04.863842" level="INFO">POST Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0Mzk0MTkxNjk0MDhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ0LCJleHAiOjE3NTk0NjE1NDR9._BD3IOAIQ3bK1Q8KZdFw3N-YZEG5c2-8FN5iz4COVlc', 'Content-Length': '114', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto17594609445554353934", "preco": "150", "descricao": "Produto Duplicado Teste", "quantidade": "5"}' 
 </msg>
<msg time="2025-10-03T00:09:04.863938" level="INFO">POST Response : url=http://13.218.59.237:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 03 Oct 2025 03:09:04 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Já existe produto com esse nome"
} 
 </msg>
<msg time="2025-10-03T00:09:04.864078" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:04.713219" elapsed="0.150887"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.864711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:04.864269" elapsed="0.000497"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.864890" elapsed="0.000450"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)já.*existe.*produto</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:04.865447" elapsed="0.000460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:04.865964" elapsed="0.000033"/>
</return>
<msg time="2025-10-03T00:09:04.866125" level="INFO">${response2} = &lt;Response [400]&gt;</msg>
<var>${response2}</var>
<arg>${nome_produto}</arg>
<arg>${AUTH_TOKEN}</arg>
<doc>Tenta cadastrar um produto com um nome já existente.
Requer o nome e um token de autenticação.</doc>
<status status="PASS" start="2025-10-03T00:09:04.711995" elapsed="0.154154"/>
</kw>
<doc>Testa que não é possível cadastrar dois produtos com o mesmo nome</doc>
<tag>duplicidade</tag>
<tag>negativo</tag>
<tag>produto</tag>
<status status="PASS" start="2025-10-03T00:09:04.553580" elapsed="0.312848"/>
</test>
<test id="s1-s3-t3" name="Cenário 03: Cadastrar Produto Não Sendo Admin" line="24">
<kw name="Gerar Token Usuário Comum" owner="login">
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.868722" level="INFO">${timestamp} = 1759460944</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:04.868512" elapsed="0.000245"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.869140" level="INFO">${microseconds} = 869076</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:04.868884" elapsed="0.000284"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.869467" level="INFO">${random} = 5821</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:04.869279" elapsed="0.000220"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.869776" level="INFO">${unique_email} = qa17594609448690765821@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:04.869596" elapsed="0.000203"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T00:09:04.869845" elapsed="0.000034"/>
</return>
<msg time="2025-10-03T00:09:04.869989" level="INFO">${email} = qa17594609448690765821@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T00:09:04.868262" elapsed="0.001749"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:04.870410" level="INFO">${payload} = {'nome': 'Usuario Comum', 'email': 'qa17594609448690765821@exemplo.com', 'password': '12345', 'administrador': 'false'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:04.870111" elapsed="0.000324"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:05.022950" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '119', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Comum", "email": "qa17594609448690765821@exemplo.com", "password": "12345", "administrador": "false"}' 
 </msg>
<msg time="2025-10-03T00:09:05.023038" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:04 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "n5nZrZXDslo6NlAX"
} 
 </msg>
<msg time="2025-10-03T00:09:05.023157" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:04.870538" elapsed="0.152646"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.023859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:05.023390" elapsed="0.000530"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:05.024047" elapsed="0.000480"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:05.024644" elapsed="0.000418"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:05.025174" elapsed="0.000378"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T00:09:05.025733" level="INFO">${USER_EMAIL} = qa17594609448690765821@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T00:09:05.025607" elapsed="0.000150"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T00:09:05.025902" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T00:09:05.025799" elapsed="0.000126"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T00:09:05.025962" elapsed="0.000030"/>
</return>
<msg time="2025-10-03T00:09:05.026134" level="INFO">${response_user} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T00:09:05.026170" level="INFO">${email} = qa17594609448690765821@exemplo.com</msg>
<var>${response_user}</var>
<var>${email}</var>
<arg>Usuario Comum</arg>
<arg>false</arg>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T00:09:04.867796" elapsed="0.158394"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.026556" level="INFO">${login_data} = {'email': 'qa17594609448690765821@exemplo.com', 'password': '12345'}</msg>
<var>${login_data}</var>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:05.026325" elapsed="0.000255"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:05.172946" level="INFO">POST Request : url=http://13.218.59.237:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"email": "qa17594609448690765821@exemplo.com", "password": "12345"}' 
 </msg>
<msg time="2025-10-03T00:09:05.173028" level="INFO">POST Response : url=http://13.218.59.237:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '293', 'Date': 'Fri, 03 Oct 2025 03:09:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0NDg2OTA3NjU4MjFAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ1LCJleHAiOjE3NTk0NjE1NDV9.OO-n-1K9iDCaKmHQ5BwVzrwElzBx6pxibhVxyk-N8io"
} 
 </msg>
<msg time="2025-10-03T00:09:05.173153" level="INFO">${response_login} = &lt;Response [200]&gt;</msg>
<var>${response_login}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${login_data}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:05.026679" elapsed="0.146500"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.173841" level="INFO">${token_user} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0NDg2OTA3NjU4MjFAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ1LCJleHAiOjE3NTk0NjE1NDV9.OO-n-1K9iDCaKmHQ5BwVzrw...</msg>
<var>${token_user}</var>
<arg>${response_login.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:05.173316" elapsed="0.000564"/>
</kw>
<return>
<value>${token_user}</value>
<status status="PASS" start="2025-10-03T00:09:05.173953" elapsed="0.000099"/>
</return>
<msg time="2025-10-03T00:09:05.174279" level="INFO">${token_user} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0NDg2OTA3NjU4MjFAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ1LCJleHAiOjE3NTk0NjE1NDV9.OO-n-1K9iDCaKmHQ5BwVzrw...</msg>
<var>${token_user}</var>
<doc>Gera token de usuário não administrador</doc>
<status status="PASS" start="2025-10-03T00:09:04.867487" elapsed="0.306828"/>
</kw>
<kw name="Cadastrar Produto Não Sendo Admin" owner="produto">
<kw name="Gerar Nome Produto Único" owner="produto">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.176082" level="INFO">${timestamp} = 1759460945</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:05.175898" elapsed="0.000212"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.176459" level="INFO">${microseconds} = 176403</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:05.176216" elapsed="0.000267"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.177326" level="INFO">${random} = 7931</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:05.176584" elapsed="0.000773"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.177650" level="INFO">${unique_name} = Produto17594609451764037931</msg>
<var>${unique_name}</var>
<arg>Produto${timestamp}${microseconds}${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:05.177468" elapsed="0.000207"/>
</kw>
<return>
<value>${unique_name}</value>
<status status="PASS" start="2025-10-03T00:09:05.177718" elapsed="0.000031"/>
</return>
<msg time="2025-10-03T00:09:05.177856" level="INFO">${nome_produto} = Produto17594609451764037931</msg>
<var>${nome_produto}</var>
<doc>Gera um nome de produto único baseado no timestamp com milissegundos e número aleatório.</doc>
<status status="PASS" start="2025-10-03T00:09:05.175688" elapsed="0.002190"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.178194" level="INFO">${payload} = {'nome': 'Produto17594609451764037931', 'preco': '100', 'descricao': 'Teste Produto Não Admin', 'quantidade': '3'}</msg>
<var>${payload}</var>
<arg>nome=${nome_produto}</arg>
<arg>preco=100</arg>
<arg>descricao=Teste Produto Não Admin</arg>
<arg>quantidade=3</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:05.177978" elapsed="0.000243"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.178589" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0NDg2OTA3NjU4MjFAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ1LCJleHAiOjE3NTk0NjE1NDV9.OO-n...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:05.178401" elapsed="0.000216"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:05.326980" level="INFO">POST Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2MDk0NDg2OTA3NjU4MjFAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDYwOTQ1LCJleHAiOjE3NTk0NjE1NDV9.OO-n-1K9iDCaKmHQ5BwVzrwElzBx6pxibhVxyk-N8io', 'Content-Length': '119', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto17594609451764037931", "preco": "100", "descricao": "Teste Produto N\\u00e3o Admin", "quantidade": "3"}' 
 </msg>
<msg time="2025-10-03T00:09:05.327062" level="INFO">POST Response : url=http://13.218.59.237:3000/produtos 
 status=403, reason=Forbidden 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '56', 'Date': 'Fri, 03 Oct 2025 03:09:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Rota exclusiva para administradores"
} 
 </msg>
<msg time="2025-10-03T00:09:05.327191" level="INFO">${response} = &lt;Response [403]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=403</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:05.178721" elapsed="0.148495"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.327907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>403</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:05.327355" elapsed="0.000626"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)exclusiva.*administradores</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:05.328154" elapsed="0.000612"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:05.328849" elapsed="0.000041"/>
</return>
<arg>${token_user}</arg>
<doc>Tenta cadastrar um produto usando um token de usuário não administrador.</doc>
<status status="PASS" start="2025-10-03T00:09:05.175277" elapsed="0.153728"/>
</kw>
<doc>Testa que não é possível cadastrar um produto usando o token de um usuário não administrador</doc>
<tag>negativo</tag>
<tag>permissão</tag>
<tag>produto</tag>
<status status="PASS" start="2025-10-03T00:09:04.866908" elapsed="0.462389"/>
</test>
<test id="s1-s3-t4" name="Cenário 04: Cadastrar Produto com Token Inválido" line="30">
<kw name="Cadastrar Produto com Token Inválido" owner="produto">
<kw name="Gerar Nome Produto Único" owner="produto">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.331217" level="INFO">${timestamp} = 1759460945</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:05.331025" elapsed="0.000218"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.331569" level="INFO">${microseconds} = 331513</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:05.331343" elapsed="0.000250"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.331872" level="INFO">${random} = 4693</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:05.331689" elapsed="0.000207"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.332186" level="INFO">${unique_name} = Produto17594609453315134693</msg>
<var>${unique_name}</var>
<arg>Produto${timestamp}${microseconds}${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:05.332003" elapsed="0.000206"/>
</kw>
<return>
<value>${unique_name}</value>
<status status="PASS" start="2025-10-03T00:09:05.332253" elapsed="0.000032"/>
</return>
<msg time="2025-10-03T00:09:05.332392" level="INFO">${nome_produto} = Produto17594609453315134693</msg>
<var>${nome_produto}</var>
<doc>Gera um nome de produto único baseado no timestamp com milissegundos e número aleatório.</doc>
<status status="PASS" start="2025-10-03T00:09:05.330824" elapsed="0.001602"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.332748" level="INFO">${payload} = {'nome': 'Produto17594609453315134693', 'preco': '100', 'descricao': 'Teste Produto Token Inválido', 'quantidade': '3'}</msg>
<var>${payload}</var>
<arg>nome=${nome_produto}</arg>
<arg>preco=100</arg>
<arg>descricao=Teste Produto Token Inválido</arg>
<arg>quantidade=3</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:05.332528" elapsed="0.000245"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.333065" level="INFO">${headers} = {'Authorization': 'InvalidToken123'}</msg>
<var>${headers}</var>
<arg>Authorization=${invalid_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:05.332878" elapsed="0.000211"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:05.478928" level="INFO">POST Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'InvalidToken123', 'Content-Length': '124', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto17594609453315134693", "preco": "100", "descricao": "Teste Produto Token Inv\\u00e1lido", "quantidade": "3"}' 
 </msg>
<msg time="2025-10-03T00:09:05.479017" level="INFO">POST Response : url=http://13.218.59.237:3000/produtos 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '103', 'Date': 'Fri, 03 Oct 2025 03:09:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg time="2025-10-03T00:09:05.479148" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:05.333179" elapsed="0.145995"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.479823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:05.479381" elapsed="0.000499"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)token.*inválido</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:05.480012" elapsed="0.000500"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:05.480569" elapsed="0.000032"/>
</return>
<arg>InvalidToken123</arg>
<doc>Tenta cadastrar um produto usando um token inválido.</doc>
<status status="PASS" start="2025-10-03T00:09:05.330522" elapsed="0.150179"/>
</kw>
<doc>Testa que não é possível cadastrar um produto usando um token inválido</doc>
<tag>autenticação</tag>
<tag>negativo</tag>
<tag>produto</tag>
<status status="PASS" start="2025-10-03T00:09:05.329899" elapsed="0.151085"/>
</test>
<test id="s1-s3-t5" name="Cenário 05: Listar Produtos" line="35">
<kw name="Listar Produtos" owner="produto">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:05.774924" level="INFO">GET Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-10-03T00:09:05.775046" level="INFO">GET Response : url=http://13.218.59.237:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '18240', 'Date': 'Fri, 03 Oct 2025 03:09:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 85,
    "produtos": [
        {
            "nome": "Produto17594589416694075872",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "0vC8WY3FWWUxlcMw"
        },
        {
            "nome": "Produto17594596804745449121",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "2Tk7rZ9pB3yuftj6"
        },
        {
            "nome": "Produto17594593191635694100",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "2i39xPcCGwlRBIP7"
        },
        {
            "nome": "Produto17594581747605942217",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "3MBdiIGeo8q0y33B"
        },
        {
            "nome": "Produto17593499884777622615",
            "preco": 199,
            "descricao": "Descrição do produto QA Automated",
            "quantidade": 10,
            "_id": "3qfS0bJ059lRNAnz"
        },
        {
            "nome": "Produto17593589331890769274",
            "preco": 199,
            "descricao": "Descrição do produto QA Automated",
            "quantidade": 10,
            "_id": "42a47BQMR8xsP7Pa"
        },
        {
            "nome": "Produto17594592247972905255",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "4EE1qqqPPxw8xwiZ"
        },
        {
            "nome": "Produto17594597513520342143",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "545bjRU3iAZatnjk"
        },
        {
            "nome": "Produto17594593188505994462",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "5qFnSjOH7XcM6NpH"
        },
        {
            "nome": "Produto17594576909651343505",
            "preco": 100,
            "descricao": "Teste Produto Não Admin",
            "quantidade": 3,
            "_id": "68OuHHS2oqWLWFqs"
        },
        {
            "nome": "Produto17594581745995364180",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "6h4NckqThvplsLMe"
        },
        {
            "nome": "Produto17594598356319041152",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "6iDk6XiTRJntGYvb"
        },
        {
            "nome": "Produto17594589438251734573",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "9I2Hq7rKo9RdttEV"
        },
        {
            "nome": "Produto17593491875067289180",
            "preco": 199,
            "descricao": "Descrição do produto QA Automated",
            "quantidade": 10,
            "_id": "A77eFR2yqVIuD89w"
        },
        {
            "nome": "Produto17594594337883669423",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "A7kQV5XIaCzxwufc"
        },
        {
            "nome": "Produto17594581401023373725",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "ABdxASoUlWz1Oa1v"
        },
        {
            "nome": "Logitech MX Vertical",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 382,
            "_id": "BeeJh5lz3k6kSIzA"
        },
        {
            "nome": "Produto17594590509936726294",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "BljVZx5EMtsJP3ZS"
        },
        {
            "nome": "Produto17594594741305429827",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "BxAmoVixOAWQn0c5"
        },
        {
            "nome": "Produto17594437934543273643",
            "preco": 199,
            "descricao": "Descrição do produto QA Automated",
            "quantidade": 10,
            "_id": "CDVPUB7iBe09V3m0"
        },
        {
            "nome": "Produto17594601951523774530",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": "91",
            "_id": "CQ1blapL8qBpbvuV"
        },
        {
            "nome": "Produto17594609423725519087",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": "91",
            "_id": "Dz3PAcOBhn3XvTpI"
        },
        {
            "nome": "Produto17594581402577747425",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "FxlaJMWWpV72KCk1"
        },
        {
            "nome": "Produto17594590058587094796",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "H693girBwN6vDE9D"
        },
        {
            "nome": "Produto17594601971786493224",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "I0QxIDWCzouwUjML"
        },
        {
            "nome": "Produto17593464328802071111",
            "preco": 199,
            "descricao": "Descrição do produto teste automatizado",
            "quantidade": 10,
            "_id": "IdBSEyIc8k8xyzlg"
        },
        {
            "nome": "Produto17593499883183296474",
            "preco": 199,
            "descricao": "Descrição do produto QA Automated",
            "quantidade": 10,
            "_id": "IeHK9fUn2oZjcrFx"
        },
        {
            "nome": "Samsung 60 polegadas",
            "preco": 5240,
            "descricao": "TV",
            "quantidade": 49977,
            "_id": "K6leHdftCeOJj8BJ"
        },
        {
            "nome": "Produto17594551923969437397",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "Kh9FdIJUEvqEW518"
        },
        {
            "nome": "Produto17594609419008801403",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 9,
            "_id": "Ks3wSkGAknYfMl6x"
        },
        {
            "nome": "Produto17594601973349677520",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "LP5nxhMT8Z0Ziqhe"
        },
        {
            "nome": "Produto1759458846445433767",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "Le9yi7vUXeli2S6L"
        },
        {
            "nome": "Produto17594580561457516610",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "M9SKJmt7gbLUEPvb"
        },
        {
            "nome": "Produto17594590511566239040",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "McOL4EGBKE4EGsaa"
        },
        {
            "nome": "Produto17594590488208836049",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 9,
            "_id": "MqkRNRaI4x6L0Xz6"
        },
        {
            "nome": "Produto17594596803183023334",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "Oly3j0Y4vuAojNSv"
        },
        {
            "nome": "Produto17594576906536181577",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "SVmXPEGRbECcp1qi"
        },
        {
            "nome": "Produto17594592668709782223",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "SYHpdzknm2ShnaTc"
        },
        {
            "nome": "Produto17594594336274776750",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "UTA1a6UOf7GUQHGg"
        },
        {
            "nome": "Produto1759459321428776338",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "WPT9OjP3przOTRhK"
        },
        {
            "nome": "Produto17594598336090616479",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": "91",
            "_id": "XKTT7LRoJCHLi9uh"
        },
        {
            "nome": "Produto17594589439829243444",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "XmcV9oU2gs0H7Fc1"
        },
        {
            "nome": "Produto17593605425071617710",
            "preco": 199,
            "descricao": "Descrição do produto QA Automated",
            "quantidade": 10,
            "_id": "ZeuWWE30MGAi98v5"
        },
        {
            "nome": "Produto17594609443996816380",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "ZqKqqYJk5zQLdvew"
        },
        {
            "nome": "Produto Teste Usuário Comum",
            "preco": 100,
            "descricao": "Descrição do produto teste usuário comum",
            "quantidade": 5,
            "_id": "aE8lkawbBKVLM32I"
        },
        {
            "nome": "Produto17593499255249241199",
            "preco": 199,
            "descricao": "Descrição do produto QA Automated",
            "quantidade": 10,
            "_id": "aQUTXsspuXyFmBAv"
        },
        {
            "nome": "Produto17594576904903064795",
            "preco": 199,
            "descricao": "... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-10-03T00:09:05.775304" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:05.482409" elapsed="0.292922"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.775866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:05.775467" elapsed="0.000449"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>produtos</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:05.776017" elapsed="0.000538"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.777210" level="INFO">Length is 85.</msg>
<arg>${response.json()['produtos']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-10-03T00:09:05.776655" elapsed="0.000615"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:05.777322" elapsed="0.000036"/>
</return>
<doc>Lista todos os produtos cadastrados.</doc>
<status status="PASS" start="2025-10-03T00:09:05.482138" elapsed="0.295328"/>
</kw>
<doc>Testa a listagem de produtos</doc>
<tag>listagem</tag>
<tag>positivo</tag>
<tag>produto</tag>
<status status="PASS" start="2025-10-03T00:09:05.481528" elapsed="0.296287"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-10-03T00:09:05.778574" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-10-03T00:09:05.778472" elapsed="0.000179"/>
</kw>
<doc>Testes de ações com Produtos.</doc>
<status status="PASS" start="2025-10-03T00:09:03.930932" elapsed="1.847758"/>
</suite>
<suite id="s1-s4" name="Usuarios" source="D:\Documentos\COMPASS\serverest-web-robot\tests\usuarios.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-10-03T00:09:05.785185" level="INFO">Creating Session using : alias=serverest, url=http://13.218.59.237:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>serverest</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-03T00:09:05.784984" elapsed="0.000392"/>
</kw>
<test id="s1-s4-t1" name="Cenário 01: Cadastro de Usuário Válido" line="11">
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.787055" level="INFO">${timestamp} = 1759460945</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:05.786832" elapsed="0.000296"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.787523" level="INFO">${microseconds} = 787459</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:05.787257" elapsed="0.000295"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.787947" level="INFO">${random} = 4952</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:05.787696" elapsed="0.000284"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.788556" level="INFO">${unique_email} = qa17594609457874594952@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:05.788311" elapsed="0.000274"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T00:09:05.788639" elapsed="0.000065"/>
</return>
<msg time="2025-10-03T00:09:05.788834" level="INFO">${email} = qa17594609457874594952@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T00:09:05.786599" elapsed="0.002260"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:05.789618" level="INFO">${payload} = {'nome': 'QA User Automated', 'email': 'qa17594609457874594952@exemplo.com', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:05.789080" elapsed="0.000588"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:06.083674" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '122', 'Content-Type': 'application/json'} 
 body=b'{"nome": "QA User Automated", "email": "qa17594609457874594952@exemplo.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T00:09:06.083762" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:05 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "blMXyjU1wa5XtZw5"
} 
 </msg>
<msg time="2025-10-03T00:09:06.083885" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:05.789826" elapsed="0.294084"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.084540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:06.084071" elapsed="0.000524"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:06.084718" elapsed="0.000448"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:06.085278" elapsed="0.000427"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:06.085809" elapsed="0.000376"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T00:09:06.086417" level="INFO">${USER_EMAIL} = qa17594609457874594952@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T00:09:06.086298" elapsed="0.000145"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T00:09:06.086589" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T00:09:06.086483" elapsed="0.000128"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T00:09:06.086649" elapsed="0.000031"/>
</return>
<msg time="2025-10-03T00:09:06.086825" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T00:09:06.086862" level="INFO">${email} = qa17594609457874594952@exemplo.com</msg>
<var>${response}</var>
<var>${email}</var>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T00:09:05.786273" elapsed="0.300609"/>
</kw>
<variable name="${USER_ID}" scope="SUITE">
<msg time="2025-10-03T00:09:06.087524" level="INFO">${USER_ID} = blMXyjU1wa5XtZw5</msg>
<var>${response.json()['_id']}</var>
<status status="PASS" start="2025-10-03T00:09:06.087091" elapsed="0.000467"/>
</variable>
<variable name="${VALID_EMAIL}" scope="SUITE">
<msg time="2025-10-03T00:09:06.087864" level="INFO">${VALID_EMAIL} = qa17594609457874594952@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T00:09:06.087750" elapsed="0.000141"/>
</variable>
<doc>Testa o cadastro de um usuário com todos os campos válidos</doc>
<tag>critico</tag>
<tag>positivo</tag>
<status status="PASS" start="2025-10-03T00:09:05.785459" elapsed="0.302651"/>
</test>
<test id="s1-s4-t2" name="Cenário 02: Cadastro com E-mail Duplicado" line="18">
<kw name="Cadastrar Usuário Com E-mail Duplicado" owner="usuario">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.089896" level="INFO">${payload} = {'nome': 'Outro Usuario', 'email': 'qa17594609457874594952@exemplo.com', 'password': '12345', 'administrador': 'false'}</msg>
<var>${payload}</var>
<arg>nome=Outro Usuario</arg>
<arg>email=${email_existente}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:06.089644" elapsed="0.000282"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:06.236561" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '119', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Outro Usuario", "email": "qa17594609457874594952@exemplo.com", "password": "12345", "administrador": "false"}' 
 </msg>
<msg time="2025-10-03T00:09:06.236649" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 03 Oct 2025 03:09:06 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg time="2025-10-03T00:09:06.236773" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:06.090036" elapsed="0.146763"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.237529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:06.237029" elapsed="0.000559"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:06.237815" elapsed="0.000777"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)já.*sendo usado</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:06.238769" elapsed="0.000685"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:06.239552" elapsed="0.000050"/>
</return>
<arg>${VALID_EMAIL}</arg>
<doc>Tenta cadastrar usuário com email duplicado</doc>
<status status="PASS" start="2025-10-03T00:09:06.089356" elapsed="0.150380"/>
</kw>
<doc>Testa que não é possível cadastrar usuário com e-mail já existente</doc>
<tag>critico</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-10-03T00:09:06.088769" elapsed="0.151262"/>
</test>
<test id="s1-s4-t3" name="Cenário 03: Cadastro com E-mail Inválido" line="23">
<kw name="Cadastrar Usuário Com E-mail Inválido" owner="usuario">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.241693" level="INFO">${payload} = {'nome': 'Usuario Teste', 'email': 'qateste', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=Usuario Teste</arg>
<arg>email=${email_invalido}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:06.241442" elapsed="0.000282"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:06.388656" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Teste", "email": "qateste", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T00:09:06.388740" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Fri, 03 Oct 2025 03:09:06 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "email": "email deve ser um email válido"
} 
 </msg>
<msg time="2025-10-03T00:09:06.388865" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:06.241835" elapsed="0.147055"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.389506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:06.389061" elapsed="0.000505"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:06.389675" elapsed="0.000501"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:06.390291" elapsed="0.000409"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['email']}</arg>
<arg>(?i)email.*válido</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:06.390806" elapsed="0.000447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:06.391309" elapsed="0.000034"/>
</return>
<arg>${INVALID_EMAIL}</arg>
<doc>Tenta cadastrar usuário com email inválido</doc>
<status status="PASS" start="2025-10-03T00:09:06.241159" elapsed="0.150284"/>
</kw>
<doc>Testa que não é possível cadastrar usuário com formato de e-mail inválido</doc>
<tag>alto</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-10-03T00:09:06.240568" elapsed="0.151154"/>
</test>
<test id="s1-s4-t4" name="Cenário 04: Cadastro com Senha Muito Curta" line="28">
<kw name="Cadastrar Usuário Com Senha Inválida" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.394074" level="INFO">${timestamp} = 1759460946</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:06.393885" elapsed="0.000219"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.395126" level="INFO">${microseconds} = 395048</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:06.394213" elapsed="0.000947"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.395488" level="INFO">${random} = 4320</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:06.395280" elapsed="0.000234"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.395789" level="INFO">${unique_email} = qa17594609463950484320@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:06.395611" elapsed="0.000201"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T00:09:06.395856" elapsed="0.000032"/>
</return>
<msg time="2025-10-03T00:09:06.395998" level="INFO">${email} = qa17594609463950484320@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T00:09:06.393687" elapsed="0.002332"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.396341" level="INFO">${payload} = {'nome': 'Usuario Senha Invalida', 'email': 'qa17594609463950484320@exemplo.com', 'password': '1234', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=Usuario Senha Invalida</arg>
<arg>email=${email}</arg>
<arg>password=${senha_invalida}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:06.396113" elapsed="0.000253"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:06.543311" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '126', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Senha Invalida", "email": "qa17594609463950484320@exemplo.com", "password": "1234", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T00:09:06.543402" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:06 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "WAaJ5QJlQviM3cEk"
} 
 </msg>
<msg time="2025-10-03T00:09:06.543557" level="FAIL">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-03T00:09:06.396461" elapsed="0.167437">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:06.564124" elapsed="0.000033"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:06.564258" elapsed="0.000021"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>password</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:06.564361" elapsed="0.000019"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['password']}</arg>
<arg>${regex_esperado}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:06.564459" elapsed="0.000019"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-03T00:09:06.564523" elapsed="0.000020"/>
</return>
<arg>${SHORT_PASSWORD}</arg>
<arg>(?i)mínimo|minim|5</arg>
<doc>Tenta cadastrar usuário com senha inválida</doc>
<status status="FAIL" start="2025-10-03T00:09:06.393363" elapsed="0.171338">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<doc>Testa que não é possível cadastrar usuário com senha menor que 5 caracteres</doc>
<tag>alto</tag>
<tag>bva</tag>
<tag>negativo</tag>
<status status="FAIL" start="2025-10-03T00:09:06.392703" elapsed="0.172373">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</test>
<test id="s1-s4-t5" name="Cenário 05: Cadastro com Senha Muito Longa" line="33">
<kw name="Cadastrar Usuário Com Senha Inválida" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.566893" level="INFO">${timestamp} = 1759460946</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:06.566720" elapsed="0.000200"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.567221" level="INFO">${microseconds} = 567168</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:06.567011" elapsed="0.000235"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.567602" level="INFO">${random} = 9133</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:06.567411" elapsed="0.000216"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.567904" level="INFO">${unique_email} = qa17594609465671689133@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:06.567719" elapsed="0.000209"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T00:09:06.567973" elapsed="0.000029"/>
</return>
<msg time="2025-10-03T00:09:06.568110" level="INFO">${email} = qa17594609465671689133@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T00:09:06.566531" elapsed="0.001602"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.568454" level="INFO">${payload} = {'nome': 'Usuario Senha Invalida', 'email': 'qa17594609465671689133@exemplo.com', 'password': '12345678901', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=Usuario Senha Invalida</arg>
<arg>email=${email}</arg>
<arg>password=${senha_invalida}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:06.568228" elapsed="0.000251"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:06.716790" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '133', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Senha Invalida", "email": "qa17594609465671689133@exemplo.com", "password": "12345678901", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T00:09:06.716891" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:06 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "UvAA6hvsEX7OCFoc"
} 
 </msg>
<msg time="2025-10-03T00:09:06.717023" level="FAIL">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-03T00:09:06.568597" elapsed="0.149456">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:06.718225" elapsed="0.000027"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:06.718341" elapsed="0.000018"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>password</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:06.718435" elapsed="0.000016"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['password']}</arg>
<arg>${regex_esperado}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:06.718528" elapsed="0.000017"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-03T00:09:06.718584" elapsed="0.000018"/>
</return>
<arg>${LONG_PASSWORD}</arg>
<arg>(?i)máximo|maxim|10</arg>
<doc>Tenta cadastrar usuário com senha inválida</doc>
<status status="FAIL" start="2025-10-03T00:09:06.566217" elapsed="0.152603">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<doc>Testa que não é possível cadastrar usuário com senha maior que 10 caracteres</doc>
<tag>alto</tag>
<tag>bva</tag>
<tag>negativo</tag>
<status status="FAIL" start="2025-10-03T00:09:06.565653" elapsed="0.154001">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</test>
<test id="s1-s4-t6" name="Cenário 06: Cadastro com E-mail Gmail Bloqueado" line="38">
<kw name="Cadastrar Usuário Com Domínio Bloqueado" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.721526" level="INFO">${timestamp} = 1759460946</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:06.721337" elapsed="0.000219"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.721845" level="INFO">${email} = teste1759460946@gmail.com</msg>
<var>${email}</var>
<arg>teste${timestamp}${dominio}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:06.721664" elapsed="0.000208"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.722205" level="INFO">${payload} = {'nome': 'Usuario Dominio Bloqueado', 'email': 'teste1759460946@gmail.com', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=Usuario Dominio Bloqueado</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:06.721971" elapsed="0.000260"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:06.869298" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '121', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Dominio Bloqueado", "email": "teste1759460946@gmail.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T00:09:06.869378" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:06 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "U4IeDhiXXw3qKc18"
} 
 </msg>
<msg time="2025-10-03T00:09:06.869483" level="FAIL">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-03T00:09:06.722327" elapsed="0.148063">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:06.870614" elapsed="0.000025"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:06.870725" elapsed="0.000019"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:06.870822" elapsed="0.000016"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['email']}</arg>
<arg>(?i)não.*permitid|bloquead|domínio</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:06.870914" elapsed="0.000018"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-03T00:09:06.870974" elapsed="0.000016"/>
</return>
<arg>@gmail.com</arg>
<doc>Tenta cadastrar usuário com domínio bloqueado</doc>
<status status="FAIL" start="2025-10-03T00:09:06.721044" elapsed="0.150033">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<doc>Testa que não é possível cadastrar usuário com domínio gmail.com</doc>
<tag>medio</tag>
<tag>negativo</tag>
<status status="FAIL" start="2025-10-03T00:09:06.720414" elapsed="0.150989">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</test>
<test id="s1-s4-t7" name="Cenário 07: Cadastro com E-mail Hotmail Bloqueado" line="43">
<kw name="Cadastrar Usuário Com Domínio Bloqueado" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.873045" level="INFO">${timestamp} = 1759460946</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:06.872878" elapsed="0.000193"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.873313" level="INFO">${email} = teste1759460946@hotmail.com</msg>
<var>${email}</var>
<arg>teste${timestamp}${dominio}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:06.873165" elapsed="0.000171"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:06.873659" level="INFO">${payload} = {'nome': 'Usuario Dominio Bloqueado', 'email': 'teste1759460946@hotmail.com', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=Usuario Dominio Bloqueado</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:06.873429" elapsed="0.000255"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:07.024302" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '123', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Dominio Bloqueado", "email": "teste1759460946@hotmail.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T00:09:07.024385" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:06 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "1G8dzRLluoxqvPAZ"
} 
 </msg>
<msg time="2025-10-03T00:09:07.024505" level="FAIL">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-03T00:09:06.873777" elapsed="0.151634">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:07.025566" elapsed="0.000038"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:07.025697" elapsed="0.000018"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:07.025788" elapsed="0.000016"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['email']}</arg>
<arg>(?i)não.*permitid|bloquead|domínio</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" start="2025-10-03T00:09:07.025879" elapsed="0.000017"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-03T00:09:07.025936" elapsed="0.000015"/>
</return>
<arg>@hotmail.com</arg>
<doc>Tenta cadastrar usuário com domínio bloqueado</doc>
<status status="FAIL" start="2025-10-03T00:09:06.872631" elapsed="0.153408">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<doc>Testa que não é possível cadastrar usuário com domínio hotmail.com</doc>
<tag>medio</tag>
<tag>negativo</tag>
<status status="FAIL" start="2025-10-03T00:09:06.872067" elapsed="0.154301">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</test>
<test id="s1-s4-t8" name="Cenário 08: Cadastro com Campos Vazios" line="48">
<kw name="Cadastrar Usuário Com Campos Vazios" owner="usuario">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:07.028718" level="INFO">${payload} = {'nome': '', 'email': '', 'password': '', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=${EMPTY}</arg>
<arg>email=${EMPTY}</arg>
<arg>password=${EMPTY}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:07.027784" elapsed="0.000965"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:07.175155" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '66', 'Content-Type': 'application/json'} 
 body=b'{"nome": "", "email": "", "password": "", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T00:09:07.175270" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '150', 'Date': 'Fri, 03 Oct 2025 03:09:07 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "nome não pode ficar em branco",
    "email": "email não pode ficar em branco",
    "password": "password não pode ficar em branco"
} 
 </msg>
<msg time="2025-10-03T00:09:07.175488" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:07.028859" elapsed="0.146682"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:07.176198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:07.175689" elapsed="0.000574"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:07.176393" elapsed="0.000487"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>nome</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:07.176995" elapsed="0.000519"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:07.177634" elapsed="0.000472"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>password</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:07.178248" elapsed="0.000472"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:07.178789" elapsed="0.000046"/>
</return>
<doc>Tenta cadastrar usuário com campos obrigatórios vazios</doc>
<status status="PASS" start="2025-10-03T00:09:07.027559" elapsed="0.151395"/>
</kw>
<doc>Testa que não é possível cadastrar usuário com campos obrigatórios vazios</doc>
<tag>medio</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-10-03T00:09:07.026977" elapsed="0.152295"/>
</test>
<test id="s1-s4-t9" name="Cenário 09: Cadastro com Senha no Limite Mínimo Válido" line="53">
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:07.181762" level="INFO">${timestamp} = 1759460947</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:07.181564" elapsed="0.000228"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:07.182143" level="INFO">${microseconds} = 182084</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:07.181893" elapsed="0.000275"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:07.182527" level="INFO">${random} = 5654</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:07.182278" elapsed="0.000276"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:07.182840" level="INFO">${unique_email} = qa17594609471820845654@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:07.182656" elapsed="0.000207"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T00:09:07.182910" elapsed="0.000034"/>
</return>
<msg time="2025-10-03T00:09:07.183076" level="INFO">${email} = qa17594609471820845654@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T00:09:07.181348" elapsed="0.001757"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:07.183507" level="INFO">${payload} = {'nome': 'Usuario Limite Min', 'email': 'qa17594609471820845654@exemplo.com', 'password': '12345', 'administrador': 'false'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:07.183214" elapsed="0.000318"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:07.332186" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '124', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Limite Min", "email": "qa17594609471820845654@exemplo.com", "password": "12345", "administrador": "false"}' 
 </msg>
<msg time="2025-10-03T00:09:07.332279" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:07 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "QkaGOiwFw2oqo2xt"
} 
 </msg>
<msg time="2025-10-03T00:09:07.332394" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:07.183645" elapsed="0.148779"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:07.333227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:07.332569" elapsed="0.000860"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:07.333681" elapsed="0.000746"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:07.334562" elapsed="0.000667"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:07.335383" elapsed="0.000489"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T00:09:07.336068" level="INFO">${USER_EMAIL} = qa17594609471820845654@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T00:09:07.335939" elapsed="0.000157"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T00:09:07.336246" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T00:09:07.336140" elapsed="0.000130"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T00:09:07.336531" elapsed="0.000065"/>
</return>
<arg>Usuario Limite Min</arg>
<arg>false</arg>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T00:09:07.180956" elapsed="0.155788"/>
</kw>
<doc>Testa cadastro com senha de exatamente 5 caracteres (limite mínimo válido)</doc>
<tag>bva</tag>
<tag>positivo</tag>
<status status="PASS" start="2025-10-03T00:09:07.180153" elapsed="0.156875"/>
</test>
<test id="s1-s4-t10" name="Cenário 10: Cadastro com Senha no Limite Máximo Válido" line="58">
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T00:09:07.339029" level="INFO">${timestamp} = 1759460947</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T00:09:07.338758" elapsed="0.000304"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:07.339429" level="INFO">${microseconds} = 339365</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:07.339180" elapsed="0.000282"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T00:09:07.339910" level="INFO">${random} = 3606</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T00:09:07.339609" elapsed="0.000335"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T00:09:07.340321" level="INFO">${unique_email} = qa17594609473393653606@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T00:09:07.340097" elapsed="0.000251"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T00:09:07.340399" elapsed="0.000042"/>
</return>
<msg time="2025-10-03T00:09:07.340569" level="INFO">${email} = qa17594609473393653606@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T00:09:07.338559" elapsed="0.002033"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T00:09:07.341750" level="INFO">${payload} = {'nome': 'Usuario Limite Max', 'email': 'qa17594609473393653606@exemplo.com', 'password': '12345', 'administrador': 'false'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T00:09:07.340705" elapsed="0.001078"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:07.488595" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '124', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Limite Max", "email": "qa17594609473393653606@exemplo.com", "password": "12345", "administrador": "false"}' 
 </msg>
<msg time="2025-10-03T00:09:07.488678" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 03:09:07 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "HtFyTcIwlYgMkxNx"
} 
 </msg>
<msg time="2025-10-03T00:09:07.488805" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:07.341924" elapsed="0.146906"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:07.489386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:07.488962" elapsed="0.000478"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:07.489557" elapsed="0.000440"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:07.490101" elapsed="0.000439"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:07.490644" elapsed="0.000370"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T00:09:07.491181" level="INFO">${USER_EMAIL} = qa17594609473393653606@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T00:09:07.491066" elapsed="0.000139"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T00:09:07.491343" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T00:09:07.491242" elapsed="0.000124"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T00:09:07.491406" elapsed="0.000030"/>
</return>
<arg>Usuario Limite Max</arg>
<arg>false</arg>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T00:09:07.338205" elapsed="0.153338"/>
</kw>
<doc>Testa cadastro com senha de exatamente 10 caracteres (limite máximo válido)</doc>
<tag>bva</tag>
<tag>positivo</tag>
<status status="PASS" start="2025-10-03T00:09:07.337487" elapsed="0.154306"/>
</test>
<test id="s1-s4-t11" name="Cenário 11: Buscar Usuário Inexistente" line="63">
<kw name="Buscar Usuário Inexistente" owner="usuario">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-03T00:09:07.639881" level="INFO">GET Request : url=http://13.218.59.237:3000/usuarios/0000000000000000 
 path_url=/usuarios/0000000000000000 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-10-03T00:09:07.639962" level="INFO">GET Response : url=http://13.218.59.237:3000/usuarios/0000000000000000 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '45', 'Date': 'Fri, 03 Oct 2025 03:09:07 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Usuário não encontrado"
} 
 </msg>
<msg time="2025-10-03T00:09:07.640148" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${user_id_inexistente}</arg>
<arg>expected_status=400</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T00:09:07.493397" elapsed="0.146777"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T00:09:07.640713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T00:09:07.640301" elapsed="0.000465"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T00:09:07.640868" elapsed="0.000421"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)usuário.*não.*encontrad</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T00:09:07.641388" elapsed="0.000443"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T00:09:07.641886" elapsed="0.000031"/>
</return>
<arg>0000000000000000</arg>
<doc>Tenta buscar usuário inexistente</doc>
<status status="PASS" start="2025-10-03T00:09:07.493130" elapsed="0.148882"/>
</kw>
<doc>Testa que não é possível buscar um usuário inexistente (16 caracteres alfanuméricos)</doc>
<tag>medio</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-10-03T00:09:07.492534" elapsed="0.149769"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-10-03T00:09:07.643020" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-10-03T00:09:07.642938" elapsed="0.000141"/>
</kw>
<doc>Testes de ações com Usuários.</doc>
<status status="FAIL" start="2025-10-03T00:09:05.779533" elapsed="1.863579"/>
</suite>
<status status="FAIL" start="2025-10-03T00:09:01.040016" elapsed="6.604254"/>
</suite>
<statistics>
<total>
<stat pass="18" fail="4" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">adicionar</stat>
<stat pass="3" fail="2" skip="0">alto</stat>
<stat pass="1" fail="0" skip="0">autenticação</stat>
<stat pass="2" fail="2" skip="0">bva</stat>
<stat pass="1" fail="0" skip="0">cadastro</stat>
<stat pass="1" fail="0" skip="0">cancelar</stat>
<stat pass="3" fail="0" skip="0">carrinho</stat>
<stat pass="1" fail="0" skip="0">concluir</stat>
<stat pass="3" fail="0" skip="0">critico</stat>
<stat pass="1" fail="0" skip="0">duplicidade</stat>
<stat pass="1" fail="0" skip="0">listagem</stat>
<stat pass="3" fail="0" skip="0">login</stat>
<stat pass="2" fail="2" skip="0">medio</stat>
<stat pass="9" fail="4" skip="0">negativo</stat>
<stat pass="1" fail="0" skip="0">permissão</stat>
<stat pass="9" fail="0" skip="0">positivo</stat>
<stat pass="5" fail="0" skip="0">produto</stat>
</tag>
<suite>
<stat name="Tests" id="s1" pass="18" fail="4" skip="0">Tests</stat>
<stat name="Carrinho" id="s1-s1" pass="3" fail="0" skip="0">Tests.Carrinho</stat>
<stat name="Login" id="s1-s2" pass="3" fail="0" skip="0">Tests.Login</stat>
<stat name="Produtos" id="s1-s3" pass="5" fail="0" skip="0">Tests.Produtos</stat>
<stat name="Usuarios" id="s1-s4" pass="7" fail="4" skip="0">Tests.Usuarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
