<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.13.7 on win32)" generated="2025-10-03T02:03:34.056662" rpa="false" schemaversion="5">
<suite id="s1" name="Tests" source="D:\Documentos\COMPASS\serverest-web-robot\tests">
<suite id="s1-s1" name="Carrinho" source="D:\Documentos\COMPASS\serverest-web-robot\tests\carrinho.robot">
<kw name="Setup e Autenticar na Suite" owner="login" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:34.366447" level="INFO">Creating Session using : alias=serverest, url=http://13.218.59.237:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>serverest</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-03T02:03:34.366276" elapsed="0.000369"/>
</kw>
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.368342" level="INFO">${timestamp} = 1759467814</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:34.368142" elapsed="0.000230"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.368731" level="INFO">${microseconds} = 368666</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:34.368480" elapsed="0.000278"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.369084" level="INFO">${random} = 3718</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:34.368860" elapsed="0.000250"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.369398" level="INFO">${unique_email} = qa17594678143686663718@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:34.369211" elapsed="0.000211"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T02:03:34.369471" elapsed="0.000046"/>
</return>
<msg time="2025-10-03T02:03:34.369661" level="INFO">${email} = qa17594678143686663718@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T02:03:34.367982" elapsed="0.001702"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.370830" level="INFO">${payload} = {'nome': 'QA User', 'email': 'qa17594678143686663718@exemplo.com', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:34.369804" elapsed="0.001103"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:34.689689" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '112', 'Content-Type': 'application/json'} 
 body=b'{"nome": "QA User", "email": "qa17594678143686663718@exemplo.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T02:03:34.689804" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "x2AxQ1YyU7wZ6gc3"
} 
 </msg>
<msg time="2025-10-03T02:03:34.689927" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:34.371083" elapsed="0.318869"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.690495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:34.690086" elapsed="0.000634"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:34.690948" elapsed="0.000858"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:34.692062" elapsed="0.000570"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:34.692780" elapsed="0.000629"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T02:03:34.693627" level="INFO">${USER_EMAIL} = qa17594678143686663718@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T02:03:34.693484" elapsed="0.000169"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T02:03:34.693802" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T02:03:34.693702" elapsed="0.000123"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T02:03:34.693866" elapsed="0.000036"/>
</return>
<msg time="2025-10-03T02:03:34.694064" level="INFO">${response_cadastro} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T02:03:34.694102" level="INFO">${email} = qa17594678143686663718@exemplo.com</msg>
<var>${response_cadastro}</var>
<var>${email}</var>
<arg>${nome_usuario}</arg>
<arg>${isAdmin}</arg>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T02:03:34.367613" elapsed="0.326510"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T02:03:34.694276" level="INFO">${USER_EMAIL} = qa17594678143686663718@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T02:03:34.694180" elapsed="0.000118"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T02:03:34.694416" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T02:03:34.694335" elapsed="0.000104"/>
</variable>
<kw name="Realizar Login Com Usuário Cadastrado" owner="login">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.695065" level="INFO">${payload} = {'email': 'qa17594678143686663718@exemplo.com', 'password': '12345'}</msg>
<var>${payload}</var>
<arg>email=${USER_EMAIL}</arg>
<arg>password=${USER_PASS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:34.694815" elapsed="0.000277"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:34.854436" level="INFO">POST Request : url=http://13.218.59.237:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"email": "qa17594678143686663718@exemplo.com", "password": "12345"}' 
 </msg>
<msg time="2025-10-03T02:03:34.854519" level="INFO">POST Response : url=http://13.218.59.237:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '293', 'Date': 'Fri, 03 Oct 2025 05:03:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.REltT3sCCJOGmtMHUvP0UpWBXB4ddpsEn73k6r2lhLY"
} 
 </msg>
<msg time="2025-10-03T02:03:34.854635" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:34.695310" elapsed="0.159350"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.855210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:34.854792" elapsed="0.000473"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>authorization</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:34.855368" elapsed="0.000390"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.856251" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.REltT3sCCJOGmtMHUvP0UpW...</msg>
<var>${token}</var>
<arg>${response.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:34.855862" elapsed="0.000417"/>
</kw>
<variable name="${AUTH_TOKEN}" scope="SUITE">
<msg time="2025-10-03T02:03:34.856440" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.REltT3sCCJOGmtMHUvP0UpW...</msg>
<var>${token}</var>
<status status="PASS" start="2025-10-03T02:03:34.856330" elapsed="0.000134"/>
</variable>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:34.856505" elapsed="0.000029"/>
</return>
<msg time="2025-10-03T02:03:34.856666" level="INFO">${response_login} = &lt;Response [200]&gt;</msg>
<var>${response_login}</var>
<doc>Realiza login com um usuário válido.</doc>
<status status="PASS" start="2025-10-03T02:03:34.694621" elapsed="0.162070"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.857210" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.REltT3sCCJOGmtMHUvP0UpW...</msg>
<var>${token}</var>
<arg>${response_login.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:34.856791" elapsed="0.000446"/>
</kw>
<variable name="${AUTH_TOKEN}" scope="SUITE">
<msg time="2025-10-03T02:03:34.857373" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.REltT3sCCJOGmtMHUvP0UpW...</msg>
<var>${token}</var>
<status status="PASS" start="2025-10-03T02:03:34.857282" elapsed="0.000114"/>
</variable>
<doc>Cria sessão, cadastra usuário, faz login e salva credenciais/token no escopo da suíte.</doc>
<status status="PASS" start="2025-10-03T02:03:34.365402" elapsed="0.492043"/>
</kw>
<test id="s1-s1-t1" name="Cenário 01: Cadastrar Produto ao Carrinho" line="13">
<kw name="Adicionar Produto no Carrinho" owner="carrinho">
<kw name="Cadastrar Novo Produto" owner="produto">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Gerar Nome Produto Único" owner="produto">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.859536" level="INFO">${timestamp} = 1759467814</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:34.859345" elapsed="0.000218"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.859895" level="INFO">${microseconds} = 859835</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:34.859674" elapsed="0.000250"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.860261" level="INFO">${random} = 7314</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:34.860033" elapsed="0.000255"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.860872" level="INFO">${unique_name} = Produto17594678148598357314</msg>
<var>${unique_name}</var>
<arg>Produto${timestamp}${microseconds}${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:34.860404" elapsed="0.000545"/>
</kw>
<return>
<value>${unique_name}</value>
<status status="PASS" start="2025-10-03T02:03:34.861027" elapsed="0.000062"/>
</return>
<doc>Gera um nome de produto único baseado no timestamp com milissegundos e número aleatório.</doc>
<status status="PASS" start="2025-10-03T02:03:34.859140" elapsed="0.002173"/>
</kw>
<msg time="2025-10-03T02:03:34.861462" level="INFO">${nome_produto} = Produto17594678148598357314</msg>
<var>${nome_produto}</var>
<arg>'${nome}' == 'None'</arg>
<arg>Gerar Nome Produto Único</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${nome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-03T02:03:34.858856" elapsed="0.002638"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.862554" level="INFO">${payload} = {'nome': 'Produto17594678148598357314', 'preco': '199', 'descricao': 'Produto de Teste', 'quantidade': '10'}</msg>
<var>${payload}</var>
<arg>nome=${nome_produto}</arg>
<arg>preco=${preco}</arg>
<arg>descricao=${descricao}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:34.861694" elapsed="0.000917"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:34.863296" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.RElt...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:34.863026" elapsed="0.000302"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:35.018453" level="INFO">POST Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.REltT3sCCJOGmtMHUvP0UpWBXB4ddpsEn73k6r2lhLY', 'Content-Length': '108', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto17594678148598357314", "preco": "199", "descricao": "Produto de Teste", "quantidade": "10"}' 
 </msg>
<msg time="2025-10-03T02:03:35.018544" level="INFO">POST Response : url=http://13.218.59.237:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:34 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "naxZVwDlMJFtlH2E"
} 
 </msg>
<msg time="2025-10-03T02:03:35.018681" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:34.863461" elapsed="0.155246"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.019291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:35.018846" elapsed="0.000496"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.019445" elapsed="0.000425"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.019993" elapsed="0.000721"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*realizado.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:35.020933" elapsed="0.001055"/>
</kw>
<return>
<value>${response}</value>
<value>${nome_produto}</value>
<status status="PASS" start="2025-10-03T02:03:35.022160" elapsed="0.000059"/>
</return>
<msg time="2025-10-03T02:03:35.022442" level="INFO">${response_produto} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T02:03:35.022489" level="INFO">${nome_produto} = Produto17594678148598357314</msg>
<var>${response_produto}</var>
<var>${nome_produto}</var>
<arg>${token}</arg>
<doc>Cadastra um produto válido. Se o nome não for passado, gera um automaticamente.
Requer um token de autenticação como argumento.</doc>
<status status="PASS" start="2025-10-03T02:03:34.858555" elapsed="0.163958"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.023144" level="INFO">${produto_id} = naxZVwDlMJFtlH2E</msg>
<var>${produto_id}</var>
<arg>${response_produto.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:35.022647" elapsed="0.000527"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.023562" level="INFO">${produto_item} = {'idProduto': 'naxZVwDlMJFtlH2E', 'quantidade': '1'}</msg>
<var>${produto_item}</var>
<arg>idProduto=${produto_id}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.023313" elapsed="0.000275"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.023826" level="INFO">${produtos_array} = [{'idProduto': 'naxZVwDlMJFtlH2E', 'quantidade': '1'}]</msg>
<var>${produtos_array}</var>
<arg>${produto_item}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-10-03T02:03:35.023691" elapsed="0.000158"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.024124" level="INFO">${payload} = {'produtos': [{'idProduto': 'naxZVwDlMJFtlH2E', 'quantidade': '1'}]}</msg>
<var>${payload}</var>
<arg>produtos=${produtos_array}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.023946" elapsed="0.000202"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.024441" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.RElt...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.024264" elapsed="0.000202"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:35.175667" level="INFO">POST Request : url=http://13.218.59.237:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.REltT3sCCJOGmtMHUvP0UpWBXB4ddpsEn73k6r2lhLY', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"produtos": [{"idProduto": "naxZVwDlMJFtlH2E", "quantidade": "1"}]}' 
 </msg>
<msg time="2025-10-03T02:03:35.175758" level="INFO">POST Response : url=http://13.218.59.237:3000/carrinhos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "MuNXsxWpfmZ0gNmo"
} 
 </msg>
<msg time="2025-10-03T02:03:35.175883" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/carrinhos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:35.024559" elapsed="0.151350"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.176650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:35.176131" elapsed="0.000586"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.176856" elapsed="0.000682"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*realizado.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:35.177746" elapsed="0.000551"/>
</kw>
<return>
<value>${response}</value>
<value>${produto_id}</value>
<status status="PASS" start="2025-10-03T02:03:35.178384" elapsed="0.000046"/>
</return>
<arg>${AUTH_TOKEN}</arg>
<doc>Adiciona um produto ao carrinho de um usuário</doc>
<status status="PASS" start="2025-10-03T02:03:34.858143" elapsed="0.320438"/>
</kw>
<doc>Testa adicionar um produto ao carrinho de um usuário</doc>
<tag>adicionar</tag>
<tag>carrinho</tag>
<tag>positivo</tag>
<status status="PASS" start="2025-10-03T02:03:34.857508" elapsed="0.322164"/>
</test>
<test id="s1-s1-t2" name="Cenário 02: Concluir Compra" line="18">
<kw name="Concluir Compra" owner="carrinho">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.185701" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.RElt...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.185459" elapsed="0.000277"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:35.335051" level="INFO">DELETE Request : url=http://13.218.59.237:3000/carrinhos/concluir-compra 
 path_url=/carrinhos/concluir-compra 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.REltT3sCCJOGmtMHUvP0UpWBXB4ddpsEn73k6r2lhLY', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-10-03T02:03:35.335141" level="INFO">DELETE Response : url=http://13.218.59.237:3000/carrinhos/concluir-compra 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 03 Oct 2025 05:03:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg time="2025-10-03T02:03:35.335281" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/carrinhos/concluir-compra</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:35.185847" elapsed="0.149460"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.335989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:35.335477" elapsed="0.000574"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.336188" elapsed="0.000496"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)registro.*excluído.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:35.336822" elapsed="0.000542"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:35.337438" elapsed="0.000044"/>
</return>
<arg>${AUTH_TOKEN}</arg>
<doc>Conclui a compra do carrinho de um usuário</doc>
<status status="PASS" start="2025-10-03T02:03:35.185108" elapsed="0.152489"/>
</kw>
<doc>Testa concluir a compra do carrinho de um usuário</doc>
<tag>carrinho</tag>
<tag>concluir</tag>
<tag>positivo</tag>
<status status="PASS" start="2025-10-03T02:03:35.183744" elapsed="0.154616"/>
</test>
<test id="s1-s1-t3" name="Cenário 03: Cancelar Compra" line="23">
<kw name="Cancelar Compra" owner="carrinho">
<kw name="Adicionar Produto no Carrinho" owner="carrinho">
<kw name="Cadastrar Novo Produto" owner="produto">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Gerar Nome Produto Único" owner="produto">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.342788" level="INFO">${timestamp} = 1759467815</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:35.342563" elapsed="0.000256"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.343178" level="INFO">${microseconds} = 343115</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:35.342939" elapsed="0.000265"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.343506" level="INFO">${random} = 8903</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:35.343307" elapsed="0.000224"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.343838" level="INFO">${unique_name} = Produto17594678153431158903</msg>
<var>${unique_name}</var>
<arg>Produto${timestamp}${microseconds}${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:35.343638" elapsed="0.000228"/>
</kw>
<return>
<value>${unique_name}</value>
<status status="PASS" start="2025-10-03T02:03:35.343913" elapsed="0.000036"/>
</return>
<doc>Gera um nome de produto único baseado no timestamp com milissegundos e número aleatório.</doc>
<status status="PASS" start="2025-10-03T02:03:35.342240" elapsed="0.001812"/>
</kw>
<msg time="2025-10-03T02:03:35.344128" level="INFO">${nome_produto} = Produto17594678153431158903</msg>
<var>${nome_produto}</var>
<arg>'${nome}' == 'None'</arg>
<arg>Gerar Nome Produto Único</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${nome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-03T02:03:35.341537" elapsed="0.002612"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.344588" level="INFO">${payload} = {'nome': 'Produto17594678153431158903', 'preco': '199', 'descricao': 'Produto de Teste', 'quantidade': '10'}</msg>
<var>${payload}</var>
<arg>nome=${nome_produto}</arg>
<arg>preco=${preco}</arg>
<arg>descricao=${descricao}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.344269" elapsed="0.000347"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.345071" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.RElt...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.344856" elapsed="0.000243"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:35.496000" level="INFO">POST Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.REltT3sCCJOGmtMHUvP0UpWBXB4ddpsEn73k6r2lhLY', 'Content-Length': '108', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto17594678153431158903", "preco": "199", "descricao": "Produto de Teste", "quantidade": "10"}' 
 </msg>
<msg time="2025-10-03T02:03:35.496081" level="INFO">POST Response : url=http://13.218.59.237:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "YX7kfIvexaFueWdc"
} 
 </msg>
<msg time="2025-10-03T02:03:35.496193" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:35.345203" elapsed="0.151016"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.496804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:35.496365" elapsed="0.000493"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.496969" elapsed="0.000429"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.497495" elapsed="0.000397"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*realizado.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:35.497993" elapsed="0.000379"/>
</kw>
<return>
<value>${response}</value>
<value>${nome_produto}</value>
<status status="PASS" start="2025-10-03T02:03:35.498423" elapsed="0.000035"/>
</return>
<msg time="2025-10-03T02:03:35.498612" level="INFO">${response_produto} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T02:03:35.498650" level="INFO">${nome_produto} = Produto17594678153431158903</msg>
<var>${response_produto}</var>
<var>${nome_produto}</var>
<arg>${token}</arg>
<doc>Cadastra um produto válido. Se o nome não for passado, gera um automaticamente.
Requer um token de autenticação como argumento.</doc>
<status status="PASS" start="2025-10-03T02:03:35.341003" elapsed="0.157667"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.499139" level="INFO">${produto_id} = YX7kfIvexaFueWdc</msg>
<var>${produto_id}</var>
<arg>${response_produto.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:35.498769" elapsed="0.000394"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.499499" level="INFO">${produto_item} = {'idProduto': 'YX7kfIvexaFueWdc', 'quantidade': '1'}</msg>
<var>${produto_item}</var>
<arg>idProduto=${produto_id}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.499264" elapsed="0.000260"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.499744" level="INFO">${produtos_array} = [{'idProduto': 'YX7kfIvexaFueWdc', 'quantidade': '1'}]</msg>
<var>${produtos_array}</var>
<arg>${produto_item}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-10-03T02:03:35.499615" elapsed="0.000152"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.500034" level="INFO">${payload} = {'produtos': [{'idProduto': 'YX7kfIvexaFueWdc', 'quantidade': '1'}]}</msg>
<var>${payload}</var>
<arg>produtos=${produtos_array}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.499860" elapsed="0.000198"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.500311" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.RElt...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.500148" elapsed="0.000186"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:35.653322" level="INFO">POST Request : url=http://13.218.59.237:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.REltT3sCCJOGmtMHUvP0UpWBXB4ddpsEn73k6r2lhLY', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"produtos": [{"idProduto": "YX7kfIvexaFueWdc", "quantidade": "1"}]}' 
 </msg>
<msg time="2025-10-03T02:03:35.653403" level="INFO">POST Response : url=http://13.218.59.237:3000/carrinhos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "1bXeEnRfXiaHAUkv"
} 
 </msg>
<msg time="2025-10-03T02:03:35.653513" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/carrinhos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:35.500423" elapsed="0.153171"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.654179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:35.653736" elapsed="0.000497"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.654342" elapsed="0.000443"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*realizado.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:35.654887" elapsed="0.000373"/>
</kw>
<return>
<value>${response}</value>
<value>${produto_id}</value>
<status status="PASS" start="2025-10-03T02:03:35.655311" elapsed="0.000032"/>
</return>
<msg time="2025-10-03T02:03:35.655495" level="INFO">${response_carrinho} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T02:03:35.655536" level="INFO">${produto_id} = YX7kfIvexaFueWdc</msg>
<var>${response_carrinho}</var>
<var>${produto_id}</var>
<arg>${token}</arg>
<doc>Adiciona um produto ao carrinho de um usuário</doc>
<status status="PASS" start="2025-10-03T02:03:35.340308" elapsed="0.315248"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.655846" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.RElt...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.655662" elapsed="0.000213"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:35.806318" level="INFO">DELETE Request : url=http://13.218.59.237:3000/carrinhos/cancelar-compra 
 path_url=/carrinhos/cancelar-compra 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNDM2ODY2NjM3MThAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE0LCJleHAiOjE3NTk0Njg0MTR9.REltT3sCCJOGmtMHUvP0UpWBXB4ddpsEn73k6r2lhLY', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-10-03T02:03:35.806398" level="INFO">DELETE Response : url=http://13.218.59.237:3000/carrinhos/cancelar-compra 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '86', 'Date': 'Fri, 03 Oct 2025 05:03:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso. Estoque dos produtos reabastecido"
} 
 </msg>
<msg time="2025-10-03T02:03:35.806520" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/carrinhos/cancelar-compra</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:35.655967" elapsed="0.150577"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.807099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:35.806682" elapsed="0.000468"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.807253" elapsed="0.000417"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)registro.*excluído.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:35.807775" elapsed="0.000368"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:35.808196" elapsed="0.000032"/>
</return>
<arg>${AUTH_TOKEN}</arg>
<doc>Cancela a compra do carrinho de um usuário</doc>
<status status="PASS" start="2025-10-03T02:03:35.339932" elapsed="0.468397"/>
</kw>
<doc>Testa cancelar a compra do carrinho de um usuário</doc>
<tag>cancelar</tag>
<tag>carrinho</tag>
<tag>positivo</tag>
<status status="PASS" start="2025-10-03T02:03:35.339238" elapsed="0.469377"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-10-03T02:03:35.809425" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-10-03T02:03:35.809343" elapsed="0.000157"/>
</kw>
<doc>Testes de ações com Carrinho.</doc>
<status status="PASS" start="2025-10-03T02:03:34.098724" elapsed="1.710811"/>
</suite>
<suite id="s1-s2" name="Login" source="D:\Documentos\COMPASS\serverest-web-robot\tests\login.robot">
<kw name="Setup e Autenticar na Suite" owner="login" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:35.821669" level="INFO">Creating Session using : alias=serverest, url=http://13.218.59.237:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>serverest</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-03T02:03:35.821527" elapsed="0.000320"/>
</kw>
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.824667" level="INFO">${timestamp} = 1759467815</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:35.824260" elapsed="0.000478"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.825205" level="INFO">${microseconds} = 825131</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:35.824907" elapsed="0.000327"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.825563" level="INFO">${random} = 2578</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:35.825349" elapsed="0.000239"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.825901" level="INFO">${unique_email} = qa17594678158251312578@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:35.825700" elapsed="0.000226"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T02:03:35.826176" elapsed="0.000058"/>
</return>
<msg time="2025-10-03T02:03:35.826386" level="INFO">${email} = qa17594678158251312578@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T02:03:35.823963" elapsed="0.002449"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:35.826875" level="INFO">${payload} = {'nome': 'QA User', 'email': 'qa17594678158251312578@exemplo.com', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:35.826550" elapsed="0.000355"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:36.119688" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '112', 'Content-Type': 'application/json'} 
 body=b'{"nome": "QA User", "email": "qa17594678158251312578@exemplo.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T02:03:36.119765" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:35 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ewUIPRapBJDEnLMw"
} 
 </msg>
<msg time="2025-10-03T02:03:36.119888" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:35.827032" elapsed="0.292881"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.120442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:36.120047" elapsed="0.000449"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:36.120762" elapsed="0.000577"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:36.121471" elapsed="0.000425"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:36.122007" elapsed="0.000383"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T02:03:36.122573" level="INFO">${USER_EMAIL} = qa17594678158251312578@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T02:03:36.122447" elapsed="0.000152"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T02:03:36.122746" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T02:03:36.122639" elapsed="0.000131"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T02:03:36.122809" elapsed="0.000029"/>
</return>
<msg time="2025-10-03T02:03:36.122989" level="INFO">${response_cadastro} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T02:03:36.123041" level="INFO">${email} = qa17594678158251312578@exemplo.com</msg>
<var>${response_cadastro}</var>
<var>${email}</var>
<arg>${nome_usuario}</arg>
<arg>${isAdmin}</arg>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T02:03:35.822147" elapsed="0.300916"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T02:03:36.123195" level="INFO">${USER_EMAIL} = qa17594678158251312578@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T02:03:36.123112" elapsed="0.000104"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T02:03:36.123330" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T02:03:36.123250" elapsed="0.000100"/>
</variable>
<kw name="Realizar Login Com Usuário Cadastrado" owner="login">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.123902" level="INFO">${payload} = {'email': 'qa17594678158251312578@exemplo.com', 'password': '12345'}</msg>
<var>${payload}</var>
<arg>email=${USER_EMAIL}</arg>
<arg>password=${USER_PASS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:36.123680" elapsed="0.000247"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:36.270297" level="INFO">POST Request : url=http://13.218.59.237:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"email": "qa17594678158251312578@exemplo.com", "password": "12345"}' 
 </msg>
<msg time="2025-10-03T02:03:36.270373" level="INFO">POST Response : url=http://13.218.59.237:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '293', 'Date': 'Fri, 03 Oct 2025 05:03:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNTgyNTEzMTI1NzhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE2LCJleHAiOjE3NTk0Njg0MTZ9.g_-IKGrrm0_me2q_9C_wCB7W-GSzQx5OrrNGtaWw_EA"
} 
 </msg>
<msg time="2025-10-03T02:03:36.270486" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:36.124021" elapsed="0.146491"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.271087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:36.270664" elapsed="0.000478"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>authorization</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:36.271256" elapsed="0.000551"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.272307" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNTgyNTEzMTI1NzhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE2LCJleHAiOjE3NTk0Njg0MTZ9.g_-IKGrrm0_me2q_9C_wCB7...</msg>
<var>${token}</var>
<arg>${response.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:36.271931" elapsed="0.000403"/>
</kw>
<variable name="${AUTH_TOKEN}" scope="SUITE">
<msg time="2025-10-03T02:03:36.272488" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNTgyNTEzMTI1NzhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE2LCJleHAiOjE3NTk0Njg0MTZ9.g_-IKGrrm0_me2q_9C_wCB7...</msg>
<var>${token}</var>
<status status="PASS" start="2025-10-03T02:03:36.272381" elapsed="0.000131"/>
</variable>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:36.272551" elapsed="0.000029"/>
</return>
<msg time="2025-10-03T02:03:36.272689" level="INFO">${response_login} = &lt;Response [200]&gt;</msg>
<var>${response_login}</var>
<doc>Realiza login com um usuário válido.</doc>
<status status="PASS" start="2025-10-03T02:03:36.123519" elapsed="0.149193"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.273179" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNTgyNTEzMTI1NzhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE2LCJleHAiOjE3NTk0Njg0MTZ9.g_-IKGrrm0_me2q_9C_wCB7...</msg>
<var>${token}</var>
<arg>${response_login.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:36.272810" elapsed="0.000394"/>
</kw>
<variable name="${AUTH_TOKEN}" scope="SUITE">
<msg time="2025-10-03T02:03:36.273339" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNTgyNTEzMTI1NzhAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE2LCJleHAiOjE3NTk0Njg0MTZ9.g_-IKGrrm0_me2q_9C_wCB7...</msg>
<var>${token}</var>
<status status="PASS" start="2025-10-03T02:03:36.273250" elapsed="0.000112"/>
</variable>
<doc>Cria sessão, cadastra usuário, faz login e salva credenciais/token no escopo da suíte.</doc>
<status status="PASS" start="2025-10-03T02:03:35.821250" elapsed="0.452163"/>
</kw>
<test id="s1-s2-t1" name="Cenário 01: Login com Usuário Válido" line="12">
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.274699" level="INFO">${timestamp} = 1759467816</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:36.274531" elapsed="0.000193"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.275017" level="INFO">${microseconds} = 274965</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:36.274817" elapsed="0.000224"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.275310" level="INFO">${random} = 7450</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:36.275133" elapsed="0.000199"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.275605" level="INFO">${unique_email} = qa17594678162749657450@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:36.275422" elapsed="0.000206"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T02:03:36.275670" elapsed="0.000032"/>
</return>
<msg time="2025-10-03T02:03:36.275807" level="INFO">${email} = qa17594678162749657450@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T02:03:36.274333" elapsed="0.001495"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.276188" level="INFO">${payload} = {'nome': 'QA User Automated', 'email': 'qa17594678162749657450@exemplo.com', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:36.275923" elapsed="0.000289"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:36.426676" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '122', 'Content-Type': 'application/json'} 
 body=b'{"nome": "QA User Automated", "email": "qa17594678162749657450@exemplo.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T02:03:36.426764" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "bBzgo944cqxAbBee"
} 
 </msg>
<msg time="2025-10-03T02:03:36.426887" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:36.276309" elapsed="0.150602"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.427505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:36.427061" elapsed="0.000500"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:36.427672" elapsed="0.000416"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:36.428189" elapsed="0.000398"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:36.428687" elapsed="0.000355"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T02:03:36.429272" level="INFO">${USER_EMAIL} = qa17594678162749657450@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T02:03:36.429156" elapsed="0.000141"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T02:03:36.429437" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T02:03:36.429345" elapsed="0.000114"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T02:03:36.429496" elapsed="0.000028"/>
</return>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T02:03:36.274049" elapsed="0.155580"/>
</kw>
<kw name="Realizar Login Com Usuário Cadastrado" owner="login">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.430461" level="INFO">${payload} = {'email': 'qa17594678162749657450@exemplo.com', 'password': '12345'}</msg>
<var>${payload}</var>
<arg>email=${USER_EMAIL}</arg>
<arg>password=${USER_PASS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:36.430220" elapsed="0.000271"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:36.576497" level="INFO">POST Request : url=http://13.218.59.237:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"email": "qa17594678162749657450@exemplo.com", "password": "12345"}' 
 </msg>
<msg time="2025-10-03T02:03:36.576575" level="INFO">POST Response : url=http://13.218.59.237:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '293', 'Date': 'Fri, 03 Oct 2025 05:03:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjI3NDk2NTc0NTBAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE2LCJleHAiOjE3NTk0Njg0MTZ9.ZZ6k73Ilt8zMu0bdhMY12fQdwpRKL1Q2no65RUlFkT0"
} 
 </msg>
<msg time="2025-10-03T02:03:36.576684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:36.430596" elapsed="0.146114"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.577241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:36.576842" elapsed="0.000451"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>authorization</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:36.577399" elapsed="0.000436"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.578332" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjI3NDk2NTc0NTBAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE2LCJleHAiOjE3NTk0Njg0MTZ9.ZZ6k73Ilt8zMu0bdhMY12fQ...</msg>
<var>${token}</var>
<arg>${response.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:36.577950" elapsed="0.000409"/>
</kw>
<variable name="${AUTH_TOKEN}" scope="SUITE">
<msg time="2025-10-03T02:03:36.578517" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjI3NDk2NTc0NTBAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE2LCJleHAiOjE3NTk0Njg0MTZ9.ZZ6k73Ilt8zMu0bdhMY12fQ...</msg>
<var>${token}</var>
<status status="PASS" start="2025-10-03T02:03:36.578408" elapsed="0.000132"/>
</variable>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:36.578578" elapsed="0.000030"/>
</return>
<doc>Realiza login com um usuário válido.</doc>
<status status="PASS" start="2025-10-03T02:03:36.429996" elapsed="0.148698"/>
</kw>
<doc>Testa login com usuário cadastrado válido</doc>
<tag>critico</tag>
<tag>login</tag>
<tag>positivo</tag>
<status status="PASS" start="2025-10-03T02:03:36.273464" elapsed="0.305550"/>
</test>
<test id="s1-s2-t2" name="Cenário 02: Login com Senha Inválida" line="18">
<kw name="Realizar Login Com Credenciais Inválidas" owner="login">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.581008" level="INFO">${data} = {'email': 'qa17594678162749657450@exemplo.com', 'password': 'senha_errada'}</msg>
<var>${data}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:36.580771" elapsed="0.000274"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:36.727169" level="INFO">POST Request : url=http://13.218.59.237:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '75', 'Content-Type': 'application/json'} 
 body=b'{"email": "qa17594678162749657450@exemplo.com", "password": "senha_errada"}' 
 </msg>
<msg time="2025-10-03T02:03:36.727249" level="INFO">POST Response : url=http://13.218.59.237:3000/login 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '48', 'Date': 'Fri, 03 Oct 2025 05:03:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Email e/ou senha inválidos"
} 
 </msg>
<msg time="2025-10-03T02:03:36.727363" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${data}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:36.581150" elapsed="0.146237"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.727930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:36.727521" elapsed="0.000460"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:36.728094" elapsed="0.000431"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)email.*ou.*senha.*inválido</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:36.728652" elapsed="0.000467"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:36.729238" elapsed="0.000036"/>
</return>
<arg>${USER_EMAIL}</arg>
<arg>senha_errada</arg>
<doc>Tenta realizar login com credenciais inválidas.</doc>
<status status="PASS" start="2025-10-03T02:03:36.580468" elapsed="0.148909"/>
</kw>
<doc>Testa login com senha incorreta</doc>
<tag>alto</tag>
<tag>login</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-10-03T02:03:36.579929" elapsed="0.149734"/>
</test>
<test id="s1-s2-t3" name="Cenário 03: Login com E-mail Inexistente" line="23">
<kw name="Realizar Login Com Credenciais Inválidas" owner="login">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.731423" level="INFO">${data} = {'email': 'usuario_inexistente@teste.com', 'password': '12345'}</msg>
<var>${data}</var>
<arg>email=${email}</arg>
<arg>password=${password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:36.731196" elapsed="0.000256"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:36.877042" level="INFO">POST Request : url=http://13.218.59.237:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '63', 'Content-Type': 'application/json'} 
 body=b'{"email": "usuario_inexistente@teste.com", "password": "12345"}' 
 </msg>
<msg time="2025-10-03T02:03:36.877122" level="INFO">POST Response : url=http://13.218.59.237:3000/login 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '48', 'Date': 'Fri, 03 Oct 2025 05:03:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Email e/ou senha inválidos"
} 
 </msg>
<msg time="2025-10-03T02:03:36.877246" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${data}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:36.731557" elapsed="0.145715"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.877812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:36.877407" elapsed="0.000456"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:36.877963" elapsed="0.000452"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)email.*ou.*senha.*inválido</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:36.878545" elapsed="0.000390"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:36.878990" elapsed="0.000033"/>
</return>
<arg>usuario_inexistente@teste.com</arg>
<arg>${VALID_PASSWORD}</arg>
<doc>Tenta realizar login com credenciais inválidas.</doc>
<status status="PASS" start="2025-10-03T02:03:36.730885" elapsed="0.148237"/>
</kw>
<doc>Testa login com email não cadastrado</doc>
<tag>alto</tag>
<tag>login</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-10-03T02:03:36.730336" elapsed="0.149067"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-10-03T02:03:36.880190" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-10-03T02:03:36.880103" elapsed="0.000156"/>
</kw>
<doc>Testes de ações com Auth.</doc>
<status status="PASS" start="2025-10-03T02:03:35.810436" elapsed="1.069872"/>
</suite>
<suite id="s1-s3" name="Produtos" source="D:\Documentos\COMPASS\serverest-web-robot\tests\produtos.robot">
<kw name="Setup e Autenticar na Suite" owner="login" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:36.893524" level="INFO">Creating Session using : alias=serverest, url=http://13.218.59.237:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>serverest</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-03T02:03:36.893368" elapsed="0.000360"/>
</kw>
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.894704" level="INFO">${timestamp} = 1759467816</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:36.894478" elapsed="0.000266"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.895264" level="INFO">${microseconds} = 895168</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:36.894888" elapsed="0.000439"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.895705" level="INFO">${random} = 6134</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:36.895473" elapsed="0.000259"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.896065" level="INFO">${unique_email} = qa17594678168951686134@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:36.895859" elapsed="0.000230"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T02:03:36.896138" elapsed="0.000038"/>
</return>
<msg time="2025-10-03T02:03:36.896297" level="INFO">${email} = qa17594678168951686134@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T02:03:36.894308" elapsed="0.002011"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:36.896744" level="INFO">${payload} = {'nome': 'QA User', 'email': 'qa17594678168951686134@exemplo.com', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:36.896437" elapsed="0.000335"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:37.189485" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '112', 'Content-Type': 'application/json'} 
 body=b'{"nome": "QA User", "email": "qa17594678168951686134@exemplo.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T02:03:37.189633" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "3RrldpSeEBm4vNsU"
} 
 </msg>
<msg time="2025-10-03T02:03:37.189762" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:36.896891" elapsed="0.292897"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.190330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:37.189927" elapsed="0.000457"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.190506" elapsed="0.000698"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.191352" elapsed="0.000431"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:37.191897" elapsed="0.000373"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T02:03:37.192450" level="INFO">${USER_EMAIL} = qa17594678168951686134@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T02:03:37.192327" elapsed="0.000148"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T02:03:37.192614" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T02:03:37.192514" elapsed="0.000122"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T02:03:37.192674" elapsed="0.000028"/>
</return>
<msg time="2025-10-03T02:03:37.192856" level="INFO">${response_cadastro} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T02:03:37.192893" level="INFO">${email} = qa17594678168951686134@exemplo.com</msg>
<var>${response_cadastro}</var>
<var>${email}</var>
<arg>${nome_usuario}</arg>
<arg>${isAdmin}</arg>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T02:03:36.893962" elapsed="0.298951"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T02:03:37.193045" level="INFO">${USER_EMAIL} = qa17594678168951686134@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T02:03:37.192962" elapsed="0.000104"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T02:03:37.193181" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T02:03:37.193101" elapsed="0.000101"/>
</variable>
<kw name="Realizar Login Com Usuário Cadastrado" owner="login">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.193750" level="INFO">${payload} = {'email': 'qa17594678168951686134@exemplo.com', 'password': '12345'}</msg>
<var>${payload}</var>
<arg>email=${USER_EMAIL}</arg>
<arg>password=${USER_PASS}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.193526" elapsed="0.000249"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:37.340132" level="INFO">POST Request : url=http://13.218.59.237:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"email": "qa17594678168951686134@exemplo.com", "password": "12345"}' 
 </msg>
<msg time="2025-10-03T02:03:37.340211" level="INFO">POST Response : url=http://13.218.59.237:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '293', 'Date': 'Fri, 03 Oct 2025 05:03:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjg5NTE2ODYxMzRAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.vTzkpEiyJkMG0fOwaHeG8ci9lTcr8YQItyMVaXV5744"
} 
 </msg>
<msg time="2025-10-03T02:03:37.340323" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:37.193870" elapsed="0.146478"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.341037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:37.340491" elapsed="0.000623"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>authorization</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.341255" elapsed="0.000467"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.342221" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjg5NTE2ODYxMzRAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.vTzkpEiyJkMG0fOwaHeG8ci...</msg>
<var>${token}</var>
<arg>${response.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:37.341843" elapsed="0.000405"/>
</kw>
<variable name="${AUTH_TOKEN}" scope="SUITE">
<msg time="2025-10-03T02:03:37.342406" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjg5NTE2ODYxMzRAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.vTzkpEiyJkMG0fOwaHeG8ci...</msg>
<var>${token}</var>
<status status="PASS" start="2025-10-03T02:03:37.342298" elapsed="0.000133"/>
</variable>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:37.342469" elapsed="0.000028"/>
</return>
<msg time="2025-10-03T02:03:37.342606" level="INFO">${response_login} = &lt;Response [200]&gt;</msg>
<var>${response_login}</var>
<doc>Realiza login com um usuário válido.</doc>
<status status="PASS" start="2025-10-03T02:03:37.193369" elapsed="0.149260"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.343169" level="INFO">${token} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjg5NTE2ODYxMzRAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.vTzkpEiyJkMG0fOwaHeG8ci...</msg>
<var>${token}</var>
<arg>${response_login.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:37.342790" elapsed="0.000405"/>
</kw>
<variable name="${AUTH_TOKEN}" scope="SUITE">
<msg time="2025-10-03T02:03:37.343330" level="INFO">${AUTH_TOKEN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjg5NTE2ODYxMzRAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.vTzkpEiyJkMG0fOwaHeG8ci...</msg>
<var>${token}</var>
<status status="PASS" start="2025-10-03T02:03:37.343239" elapsed="0.000114"/>
</variable>
<doc>Cria sessão, cadastra usuário, faz login e salva credenciais/token no escopo da suíte.</doc>
<status status="PASS" start="2025-10-03T02:03:36.893010" elapsed="0.450394"/>
</kw>
<test id="s1-s3-t1" name="Cenário 01: Cadastrar Produto com Sucesso" line="14">
<kw name="Cadastrar Novo Produto" owner="produto">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Gerar Nome Produto Único" owner="produto">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.344974" level="INFO">${timestamp} = 1759467817</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:37.344810" elapsed="0.000189"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.345286" level="INFO">${microseconds} = 345233</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:37.345095" elapsed="0.000215"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.345588" level="INFO">${random} = 9520</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:37.345403" elapsed="0.000210"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.345873" level="INFO">${unique_name} = Produto17594678173452339520</msg>
<var>${unique_name}</var>
<arg>Produto${timestamp}${microseconds}${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:37.345707" elapsed="0.000188"/>
</kw>
<return>
<value>${unique_name}</value>
<status status="PASS" start="2025-10-03T02:03:37.345936" elapsed="0.000031"/>
</return>
<doc>Gera um nome de produto único baseado no timestamp com milissegundos e número aleatório.</doc>
<status status="PASS" start="2025-10-03T02:03:37.344619" elapsed="0.001433"/>
</kw>
<msg time="2025-10-03T02:03:37.346118" level="INFO">${nome_produto} = Produto17594678173452339520</msg>
<var>${nome_produto}</var>
<arg>'${nome}' == 'None'</arg>
<arg>Gerar Nome Produto Único</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${nome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-03T02:03:37.344363" elapsed="0.001776"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.346518" level="INFO">${payload} = {'nome': 'Produto17594678173452339520', 'preco': '199', 'descricao': 'Produto de Teste', 'quantidade': '10'}</msg>
<var>${payload}</var>
<arg>nome=${nome_produto}</arg>
<arg>preco=${preco}</arg>
<arg>descricao=${descricao}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.346242" elapsed="0.000301"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.346813" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjg5NTE2ODYxMzRAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.vTzk...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.346643" elapsed="0.000194"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:37.496409" level="INFO">POST Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjg5NTE2ODYxMzRAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.vTzkpEiyJkMG0fOwaHeG8ci9lTcr8YQItyMVaXV5744', 'Content-Length': '108', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto17594678173452339520", "preco": "199", "descricao": "Produto de Teste", "quantidade": "10"}' 
 </msg>
<msg time="2025-10-03T02:03:37.496491" level="INFO">POST Response : url=http://13.218.59.237:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "acPu5ZOEwsQ8cnUG"
} 
 </msg>
<msg time="2025-10-03T02:03:37.496603" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:37.346926" elapsed="0.149701"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.497218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:37.496780" elapsed="0.000491"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.497383" elapsed="0.000453"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.497947" elapsed="0.000408"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*realizado.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:37.498462" elapsed="0.000407"/>
</kw>
<return>
<value>${response}</value>
<value>${nome_produto}</value>
<status status="PASS" start="2025-10-03T02:03:37.498920" elapsed="0.000030"/>
</return>
<arg>${AUTH_TOKEN}</arg>
<doc>Cadastra um produto válido. Se o nome não for passado, gera um automaticamente.
Requer um token de autenticação como argumento.</doc>
<status status="PASS" start="2025-10-03T02:03:37.344050" elapsed="0.155017"/>
</kw>
<doc>Testa o cadastro de um produto com sucesso usando o token global</doc>
<tag>cadastro</tag>
<tag>positivo</tag>
<tag>produto</tag>
<status status="PASS" start="2025-10-03T02:03:37.343456" elapsed="0.156008"/>
</test>
<test id="s1-s3-t2" name="Cenário 02: Cadastrar Produto com Nome Duplicado" line="19">
<kw name="Cadastrar Novo Produto" owner="produto">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Gerar Nome Produto Único" owner="produto">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.501583" level="INFO">${timestamp} = 1759467817</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:37.501413" elapsed="0.000198"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.501927" level="INFO">${microseconds} = 501870</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:37.501718" elapsed="0.000235"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.502253" level="INFO">${random} = 1817</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:37.502055" elapsed="0.000221"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.502555" level="INFO">${unique_name} = Produto17594678175018701817</msg>
<var>${unique_name}</var>
<arg>Produto${timestamp}${microseconds}${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:37.502375" elapsed="0.000205"/>
</kw>
<return>
<value>${unique_name}</value>
<status status="PASS" start="2025-10-03T02:03:37.502625" elapsed="0.000036"/>
</return>
<doc>Gera um nome de produto único baseado no timestamp com milissegundos e número aleatório.</doc>
<status status="PASS" start="2025-10-03T02:03:37.501210" elapsed="0.001552"/>
</kw>
<msg time="2025-10-03T02:03:37.502833" level="INFO">${nome_produto} = Produto17594678175018701817</msg>
<var>${nome_produto}</var>
<arg>'${nome}' == 'None'</arg>
<arg>Gerar Nome Produto Único</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${nome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-03T02:03:37.500941" elapsed="0.001914"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.503240" level="INFO">${payload} = {'nome': 'Produto17594678175018701817', 'preco': '199', 'descricao': 'Produto de Teste', 'quantidade': '10'}</msg>
<var>${payload}</var>
<arg>nome=${nome_produto}</arg>
<arg>preco=${preco}</arg>
<arg>descricao=${descricao}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.502967" elapsed="0.000298"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.503532" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjg5NTE2ODYxMzRAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.vTzk...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.503367" elapsed="0.000192"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:37.654840" level="INFO">POST Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjg5NTE2ODYxMzRAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.vTzkpEiyJkMG0fOwaHeG8ci9lTcr8YQItyMVaXV5744', 'Content-Length': '108', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto17594678175018701817", "preco": "199", "descricao": "Produto de Teste", "quantidade": "10"}' 
 </msg>
<msg time="2025-10-03T02:03:37.654917" level="INFO">POST Response : url=http://13.218.59.237:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "T2rCu6MrHvp8g9n4"
} 
 </msg>
<msg time="2025-10-03T02:03:37.655025" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:37.503651" elapsed="0.151397"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.655633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:37.655191" elapsed="0.000501"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.655809" elapsed="0.000457"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.656373" elapsed="0.000403"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*realizado.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:37.656878" elapsed="0.000370"/>
</kw>
<return>
<value>${response}</value>
<value>${nome_produto}</value>
<status status="PASS" start="2025-10-03T02:03:37.657299" elapsed="0.000031"/>
</return>
<msg time="2025-10-03T02:03:37.657481" level="INFO">${response1} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T02:03:37.657519" level="INFO">${nome_produto} = Produto17594678175018701817</msg>
<var>${response1}</var>
<var>${nome_produto}</var>
<arg>${AUTH_TOKEN}</arg>
<doc>Cadastra um produto válido. Se o nome não for passado, gera um automaticamente.
Requer um token de autenticação como argumento.</doc>
<status status="PASS" start="2025-10-03T02:03:37.500583" elapsed="0.156955"/>
</kw>
<kw name="Cadastrar Produto com Nome Duplicado" owner="produto">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.658438" level="INFO">${payload} = {'nome': 'Produto17594678175018701817', 'preco': '150', 'descricao': 'Produto Duplicado Teste', 'quantidade': '5'}</msg>
<var>${payload}</var>
<arg>nome=${nome_existente}</arg>
<arg>preco=150</arg>
<arg>descricao=Produto Duplicado Teste</arg>
<arg>quantidade=5</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.658219" elapsed="0.000246"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.658750" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjg5NTE2ODYxMzRAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.vTzk...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.658575" elapsed="0.000306"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:37.806363" level="INFO">POST Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjg5NTE2ODYxMzRAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.vTzkpEiyJkMG0fOwaHeG8ci9lTcr8YQItyMVaXV5744', 'Content-Length': '114', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto17594678175018701817", "preco": "150", "descricao": "Produto Duplicado Teste", "quantidade": "5"}' 
 </msg>
<msg time="2025-10-03T02:03:37.806441" level="INFO">POST Response : url=http://13.218.59.237:3000/produtos 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 03 Oct 2025 05:03:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Já existe produto com esse nome"
} 
 </msg>
<msg time="2025-10-03T02:03:37.806553" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:37.658982" elapsed="0.147594"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.807141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:37.806721" elapsed="0.000471"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.807310" elapsed="0.000447"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)já.*existe.*produto</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:37.807872" elapsed="0.000464"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:37.808394" elapsed="0.000034"/>
</return>
<msg time="2025-10-03T02:03:37.808551" level="INFO">${response2} = &lt;Response [400]&gt;</msg>
<var>${response2}</var>
<arg>${nome_produto}</arg>
<arg>${AUTH_TOKEN}</arg>
<doc>Tenta cadastrar um produto com um nome já existente.
Requer o nome e um token de autenticação.</doc>
<status status="PASS" start="2025-10-03T02:03:37.657927" elapsed="0.150648"/>
</kw>
<doc>Testa que não é possível cadastrar dois produtos com o mesmo nome</doc>
<tag>duplicidade</tag>
<tag>negativo</tag>
<tag>produto</tag>
<status status="PASS" start="2025-10-03T02:03:37.499995" elapsed="0.308871"/>
</test>
<test id="s1-s3-t3" name="Cenário 03: Cadastrar Produto Não Sendo Admin" line="25">
<kw name="Gerar Token Usuário Comum" owner="login">
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.810768" level="INFO">${timestamp} = 1759467817</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:37.810592" elapsed="0.000204"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.811116" level="INFO">${microseconds} = 811061</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:37.810905" elapsed="0.000236"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.811436" level="INFO">${random} = 4297</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:37.811240" elapsed="0.000219"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.811725" level="INFO">${unique_email} = qa17594678178110614297@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:37.811554" elapsed="0.000194"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T02:03:37.811792" elapsed="0.000032"/>
</return>
<msg time="2025-10-03T02:03:37.811929" level="INFO">${email} = qa17594678178110614297@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T02:03:37.810386" elapsed="0.001564"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.812316" level="INFO">${payload} = {'nome': 'Usuario Comum', 'email': 'qa17594678178110614297@exemplo.com', 'password': '12345', 'administrador': 'false'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.812046" elapsed="0.000295"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:37.962671" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '119', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Comum", "email": "qa17594678178110614297@exemplo.com", "password": "12345", "administrador": "false"}' 
 </msg>
<msg time="2025-10-03T02:03:37.962752" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "jyNVQaiNpYt5ows7"
} 
 </msg>
<msg time="2025-10-03T02:03:37.962877" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:37.812440" elapsed="0.150463"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.963586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:37.963145" elapsed="0.000504"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.963767" elapsed="0.000421"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.964291" elapsed="0.000407"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:37.964798" elapsed="0.000356"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T02:03:37.965329" level="INFO">${USER_EMAIL} = qa17594678178110614297@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T02:03:37.965207" elapsed="0.000145"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T02:03:37.965489" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T02:03:37.965389" elapsed="0.000121"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T02:03:37.965546" elapsed="0.000038"/>
</return>
<msg time="2025-10-03T02:03:37.965722" level="INFO">${response_user} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T02:03:37.965756" level="INFO">${email} = qa17594678178110614297@exemplo.com</msg>
<var>${response_user}</var>
<var>${email}</var>
<arg>Usuario Comum</arg>
<arg>false</arg>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T02:03:37.810101" elapsed="0.155676"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:37.966104" level="INFO">${login_data} = {'email': 'qa17594678178110614297@exemplo.com', 'password': '12345'}</msg>
<var>${login_data}</var>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:37.965886" elapsed="0.000241"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:38.113073" level="INFO">POST Request : url=http://13.218.59.237:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"email": "qa17594678178110614297@exemplo.com", "password": "12345"}' 
 </msg>
<msg time="2025-10-03T02:03:38.113154" level="INFO">POST Response : url=http://13.218.59.237:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '293', 'Date': 'Fri, 03 Oct 2025 05:03:37 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNzgxMTA2MTQyOTdAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.rXoPjjZVgMoEttI4p-8pGWwwQ5Jvjbv9_dqjOylCDn4"
} 
 </msg>
<msg time="2025-10-03T02:03:38.113268" level="INFO">${response_login} = &lt;Response [200]&gt;</msg>
<var>${response_login}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${login_data}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:37.966221" elapsed="0.147071"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.113904" level="INFO">${token_user} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNzgxMTA2MTQyOTdAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.rXoPjjZVgMoEttI4p-8pGWw...</msg>
<var>${token_user}</var>
<arg>${response_login.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:38.113436" elapsed="0.000495"/>
</kw>
<return>
<value>${token_user}</value>
<status status="PASS" start="2025-10-03T02:03:38.113983" elapsed="0.000033"/>
</return>
<msg time="2025-10-03T02:03:38.114137" level="INFO">${token_user} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNzgxMTA2MTQyOTdAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.rXoPjjZVgMoEttI4p-8pGWw...</msg>
<var>${token_user}</var>
<doc>Gera token de usuário não administrador</doc>
<status status="PASS" start="2025-10-03T02:03:37.809805" elapsed="0.304356"/>
</kw>
<kw name="Cadastrar Produto Não Sendo Admin" owner="produto">
<kw name="Gerar Nome Produto Único" owner="produto">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.115222" level="INFO">${timestamp} = 1759467818</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:38.115051" elapsed="0.000197"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.115551" level="INFO">${microseconds} = 115497</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:38.115344" elapsed="0.000232"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.115850" level="INFO">${random} = 1647</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:38.115674" elapsed="0.000200"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.116148" level="INFO">${unique_name} = Produto17594678181154971647</msg>
<var>${unique_name}</var>
<arg>Produto${timestamp}${microseconds}${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:38.115966" elapsed="0.000206"/>
</kw>
<return>
<value>${unique_name}</value>
<status status="PASS" start="2025-10-03T02:03:38.116214" elapsed="0.000032"/>
</return>
<msg time="2025-10-03T02:03:38.116351" level="INFO">${nome_produto} = Produto17594678181154971647</msg>
<var>${nome_produto}</var>
<doc>Gera um nome de produto único baseado no timestamp com milissegundos e número aleatório.</doc>
<status status="PASS" start="2025-10-03T02:03:38.114856" elapsed="0.001516"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.116678" level="INFO">${payload} = {'nome': 'Produto17594678181154971647', 'preco': '100', 'descricao': 'Teste Produto Não Admin', 'quantidade': '3'}</msg>
<var>${payload}</var>
<arg>nome=${nome_produto}</arg>
<arg>preco=100</arg>
<arg>descricao=Teste Produto Não Admin</arg>
<arg>quantidade=3</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:38.116469" elapsed="0.000235"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.117099" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNzgxMTA2MTQyOTdAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.rXoP...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:38.116918" elapsed="0.000206"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:38.265249" level="INFO">POST Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNzgxMTA2MTQyOTdAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.rXoPjjZVgMoEttI4p-8pGWwwQ5Jvjbv9_dqjOylCDn4', 'Content-Length': '119', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto17594678181154971647", "preco": "100", "descricao": "Teste Produto N\\u00e3o Admin", "quantidade": "3"}' 
 </msg>
<msg time="2025-10-03T02:03:38.265329" level="INFO">POST Response : url=http://13.218.59.237:3000/produtos 
 status=403, reason=Forbidden 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '56', 'Date': 'Fri, 03 Oct 2025 05:03:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Rota exclusiva para administradores"
} 
 </msg>
<msg time="2025-10-03T02:03:38.265438" level="INFO">${response} = &lt;Response [403]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=403</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:38.117215" elapsed="0.148248"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.266174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>403</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:38.265604" elapsed="0.000635"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)exclusiva.*administradores</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:38.266368" elapsed="0.000503"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:38.266926" elapsed="0.000033"/>
</return>
<arg>${token_user}</arg>
<doc>Tenta cadastrar um produto usando um token de usuário não administrador.</doc>
<status status="PASS" start="2025-10-03T02:03:38.114532" elapsed="0.152520"/>
</kw>
<doc>Testa que não é possível cadastrar um produto usando o token de um usuário não administrador</doc>
<tag>negativo</tag>
<tag>permissão</tag>
<tag>produto</tag>
<status status="PASS" start="2025-10-03T02:03:37.809210" elapsed="0.458130"/>
</test>
<test id="s1-s3-t4" name="Cenário 04: Cadastrar Produto com Token Inválido" line="31">
<kw name="Cadastrar Produto com Token Inválido" owner="produto">
<kw name="Gerar Nome Produto Único" owner="produto">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.269034" level="INFO">${timestamp} = 1759467818</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:38.268865" elapsed="0.000195"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.269361" level="INFO">${microseconds} = 269306</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:38.269155" elapsed="0.000230"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.269659" level="INFO">${random} = 1298</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:38.269481" elapsed="0.000210"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.269962" level="INFO">${unique_name} = Produto17594678182693061298</msg>
<var>${unique_name}</var>
<arg>Produto${timestamp}${microseconds}${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:38.269788" elapsed="0.000197"/>
</kw>
<return>
<value>${unique_name}</value>
<status status="PASS" start="2025-10-03T02:03:38.270028" elapsed="0.000031"/>
</return>
<msg time="2025-10-03T02:03:38.270167" level="INFO">${nome_produto} = Produto17594678182693061298</msg>
<var>${nome_produto}</var>
<doc>Gera um nome de produto único baseado no timestamp com milissegundos e número aleatório.</doc>
<status status="PASS" start="2025-10-03T02:03:38.268663" elapsed="0.001526"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.270507" level="INFO">${payload} = {'nome': 'Produto17594678182693061298', 'preco': '100', 'descricao': 'Teste Produto Token Inválido', 'quantidade': '3'}</msg>
<var>${payload}</var>
<arg>nome=${nome_produto}</arg>
<arg>preco=100</arg>
<arg>descricao=Teste Produto Token Inválido</arg>
<arg>quantidade=3</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:38.270290" elapsed="0.000243"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.270842" level="INFO">${headers} = {'Authorization': 'InvalidToken123'}</msg>
<var>${headers}</var>
<arg>Authorization=${invalid_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:38.270640" elapsed="0.000227"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:38.416869" level="INFO">POST Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'InvalidToken123', 'Content-Length': '124', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto17594678182693061298", "preco": "100", "descricao": "Teste Produto Token Inv\\u00e1lido", "quantidade": "3"}' 
 </msg>
<msg time="2025-10-03T02:03:38.416954" level="INFO">POST Response : url=http://13.218.59.237:3000/produtos 
 status=401, reason=Unauthorized 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '103', 'Date': 'Fri, 03 Oct 2025 05:03:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg time="2025-10-03T02:03:38.417073" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=401</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:38.270963" elapsed="0.146134"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.417770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:38.417352" elapsed="0.000472"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)token.*inválido</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:38.417950" elapsed="0.000498"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:38.418505" elapsed="0.000033"/>
</return>
<arg>InvalidToken123</arg>
<doc>Tenta cadastrar um produto usando um token inválido.</doc>
<status status="PASS" start="2025-10-03T02:03:38.268386" elapsed="0.150251"/>
</kw>
<doc>Testa que não é possível cadastrar um produto usando um token inválido</doc>
<tag>autenticação</tag>
<tag>negativo</tag>
<tag>produto</tag>
<status status="PASS" start="2025-10-03T02:03:38.267821" elapsed="0.151102"/>
</test>
<test id="s1-s3-t5" name="Cenário 05: Listar Produtos" line="36">
<kw name="Listar Produtos" owner="produto">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:38.712438" level="INFO">GET Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-10-03T02:03:38.712554" level="INFO">GET Response : url=http://13.218.59.237:3000/produtos 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '22672', 'Date': 'Fri, 03 Oct 2025 05:03:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "quantidade": 106,
    "produtos": [
        {
            "nome": "Produto17594644952900246914",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": "91",
            "_id": "0lw1Hgm6XhPE5FwZ"
        },
        {
            "nome": "Produto17594589416694075872",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "0vC8WY3FWWUxlcMw"
        },
        {
            "nome": "Produto17594642631369686489",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "23p97DubwUprXtn7"
        },
        {
            "nome": "Produto17594596804745449121",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "2Tk7rZ9pB3yuftj6"
        },
        {
            "nome": "Produto17594593191635694100",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "2i39xPcCGwlRBIP7"
        },
        {
            "nome": "Produto17594581747605942217",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "3MBdiIGeo8q0y33B"
        },
        {
            "nome": "Produto17593499884777622615",
            "preco": 199,
            "descricao": "Descrição do produto QA Automated",
            "quantidade": 10,
            "_id": "3qfS0bJ059lRNAnz"
        },
        {
            "nome": "Produto17593589331890769274",
            "preco": 199,
            "descricao": "Descrição do produto QA Automated",
            "quantidade": 10,
            "_id": "42a47BQMR8xsP7Pa"
        },
        {
            "nome": "Produto17594592247972905255",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "4EE1qqqPPxw8xwiZ"
        },
        {
            "nome": "Produto17594597513520342143",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "545bjRU3iAZatnjk"
        },
        {
            "nome": "Produto17594593188505994462",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "5qFnSjOH7XcM6NpH"
        },
        {
            "nome": "Produto17594576909651343505",
            "preco": 100,
            "descricao": "Teste Produto Não Admin",
            "quantidade": 3,
            "_id": "68OuHHS2oqWLWFqs"
        },
        {
            "nome": "Produto17594581745995364180",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "6h4NckqThvplsLMe"
        },
        {
            "nome": "Produto17594598356319041152",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "6iDk6XiTRJntGYvb"
        },
        {
            "nome": "Produto17594589438251734573",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "9I2Hq7rKo9RdttEV"
        },
        {
            "nome": "Produto17593491875067289180",
            "preco": 199,
            "descricao": "Descrição do produto QA Automated",
            "quantidade": 10,
            "_id": "A77eFR2yqVIuD89w"
        },
        {
            "nome": "Produto17594594337883669423",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "A7kQV5XIaCzxwufc"
        },
        {
            "nome": "Produto17594581401023373725",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "ABdxASoUlWz1Oa1v"
        },
        {
            "nome": "Logitech MX Vertical",
            "preco": 470,
            "descricao": "Mouse",
            "quantidade": 382,
            "_id": "BeeJh5lz3k6kSIzA"
        },
        {
            "nome": "Produto17594590509936726294",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "BljVZx5EMtsJP3ZS"
        },
        {
            "nome": "Produto17594594741305429827",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "BxAmoVixOAWQn0c5"
        },
        {
            "nome": "Produto17594437934543273643",
            "preco": 199,
            "descricao": "Descrição do produto QA Automated",
            "quantidade": 10,
            "_id": "CDVPUB7iBe09V3m0"
        },
        {
            "nome": "Produto17594601951523774530",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": "91",
            "_id": "CQ1blapL8qBpbvuV"
        },
        {
            "nome": "Produto17594609423725519087",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": "91",
            "_id": "Dz3PAcOBhn3XvTpI"
        },
        {
            "nome": "Produto17594645316043131334",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 9,
            "_id": "E6vmHbfLtJhbbNtb"
        },
        {
            "nome": "Produto17594642632927431267",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "EQ3nLB6UFtPy2jBa"
        },
        {
            "nome": "Produto17594581402577747425",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "FxlaJMWWpV72KCk1"
        },
        {
            "nome": "Produto17594590058587094796",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "H693girBwN6vDE9D"
        },
        {
            "nome": "Produto17594601971786493224",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "I0QxIDWCzouwUjML"
        },
        {
            "nome": "Produto17593464328802071111",
            "preco": 199,
            "descricao": "Descrição do produto teste automatizado",
            "quantidade": 10,
            "_id": "IdBSEyIc8k8xyzlg"
        },
        {
            "nome": "Produto17593499883183296474",
            "preco": 199,
            "descricao": "Descrição do produto QA Automated",
            "quantidade": 10,
            "_id": "IeHK9fUn2oZjcrFx"
        },
        {
            "nome": "Samsung 60 polegadas",
            "preco": 5240,
            "descricao": "TV",
            "quantidade": 49977,
            "_id": "K6leHdftCeOJj8BJ"
        },
        {
            "nome": "Produto17594551923969437397",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "Kh9FdIJUEvqEW518"
        },
        {
            "nome": "Produto17594609419008801403",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 9,
            "_id": "Ks3wSkGAknYfMl6x"
        },
        {
            "nome": "Produto17594601973349677520",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "LP5nxhMT8Z0Ziqhe"
        },
        {
            "nome": "Produto1759458846445433767",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "Le9yi7vUXeli2S6L"
        },
        {
            "nome": "Produto17594580561457516610",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "M9SKJmt7gbLUEPvb"
        },
        {
            "nome": "Produto17594590511566239040",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "McOL4EGBKE4EGsaa"
        },
        {
            "nome": "Produto17594590488208836049",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 9,
            "_id": "MqkRNRaI4x6L0Xz6"
        },
        {
            "nome": "Produto17594645342412606949",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "OcGeNJT3ZjiiZko9"
        },
        {
            "nome": "Produto17594596803183023334",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "Oly3j0Y4vuAojNSv"
        },
        {
            "nome": "Produto17594576906536181577",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "SVmXPEGRbECcp1qi"
        },
        {
            "nome": "Produto17594592668709782223",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "SYHpdzknm2ShnaTc"
        },
        {
            "nome": "Produto17594678175018701817",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "T2rCu6MrHvp8g9n4"
        },
        {
            "nome": "Produto17594594336274776750",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "UTA1a6UOf7GUQHGg"
        },
        {
            "nome": "Produto1759464534849239280",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
            "_id": "Un0ZRq1ck2V0wDqx"
        },
        {
            "nome": "Produto1759459321428776338",
            "preco": 199,
            "descricao": "Produto de Teste",
            "quantidade": 10,
         ... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-10-03T02:03:38.712859" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:38.420199" elapsed="0.292687"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.713406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:38.713020" elapsed="0.000434"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>produtos</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:38.713554" elapsed="0.000552"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.714750" level="INFO">Length is 106.</msg>
<arg>${response.json()['produtos']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-10-03T02:03:38.714205" elapsed="0.000605"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:38.714861" elapsed="0.000039"/>
</return>
<doc>Lista todos os produtos cadastrados.</doc>
<status status="PASS" start="2025-10-03T02:03:38.419985" elapsed="0.295022"/>
</kw>
<doc>Testa a listagem de produtos</doc>
<tag>listagem</tag>
<tag>positivo</tag>
<tag>produto</tag>
<status status="PASS" start="2025-10-03T02:03:38.419496" elapsed="0.295806"/>
</test>
<test id="s1-s3-t6" name="Cenário 06: Excluir Produto com Carrinho" line="41">
<kw name="Cadastrar Novo Produto" owner="produto">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Gerar Nome Produto Único" owner="produto">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.717451" level="INFO">${timestamp} = 1759467818</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:38.717292" elapsed="0.000183"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.717758" level="INFO">${microseconds} = 717706</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:38.717570" elapsed="0.000212"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.718048" level="INFO">${random} = 4584</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:38.717875" elapsed="0.000196"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.718339" level="INFO">${unique_name} = Produto17594678187177064584</msg>
<var>${unique_name}</var>
<arg>Produto${timestamp}${microseconds}${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:38.718175" elapsed="0.000186"/>
</kw>
<return>
<value>${unique_name}</value>
<status status="PASS" start="2025-10-03T02:03:38.718401" elapsed="0.000029"/>
</return>
<doc>Gera um nome de produto único baseado no timestamp com milissegundos e número aleatório.</doc>
<status status="PASS" start="2025-10-03T02:03:38.717110" elapsed="0.001401"/>
</kw>
<msg time="2025-10-03T02:03:38.718574" level="INFO">${nome_produto} = Produto17594678187177064584</msg>
<var>${nome_produto}</var>
<arg>'${nome}' == 'None'</arg>
<arg>Gerar Nome Produto Único</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${nome}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-10-03T02:03:38.716863" elapsed="0.001731"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.718954" level="INFO">${payload} = {'nome': 'Produto17594678187177064584', 'preco': '199', 'descricao': 'Produto de Teste', 'quantidade': '10'}</msg>
<var>${payload}</var>
<arg>nome=${nome_produto}</arg>
<arg>preco=${preco}</arg>
<arg>descricao=${descricao}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:38.718693" elapsed="0.000285"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.719255" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjg5NTE2ODYxMzRAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.vTzk...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:38.719087" elapsed="0.000191"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:38.867634" level="INFO">POST Request : url=http://13.218.59.237:3000/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjg5NTE2ODYxMzRAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.vTzkpEiyJkMG0fOwaHeG8ci9lTcr8YQItyMVaXV5744', 'Content-Length': '108', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Produto17594678187177064584", "preco": "199", "descricao": "Produto de Teste", "quantidade": "10"}' 
 </msg>
<msg time="2025-10-03T02:03:38.867709" level="INFO">POST Response : url=http://13.218.59.237:3000/produtos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ClRD0RDr9FurzJzx"
} 
 </msg>
<msg time="2025-10-03T02:03:38.867813" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:38.719367" elapsed="0.148471"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.868472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:38.867975" elapsed="0.000559"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:38.868669" elapsed="0.000532"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:38.869346" elapsed="0.000438"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*realizado.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:38.869890" elapsed="0.000392"/>
</kw>
<return>
<value>${response}</value>
<value>${nome_produto}</value>
<status status="PASS" start="2025-10-03T02:03:38.870395" elapsed="0.000036"/>
</return>
<msg time="2025-10-03T02:03:38.870592" level="INFO">${response_produto} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T02:03:38.870632" level="INFO">${nome_produto} = Produto17594678187177064584</msg>
<var>${response_produto}</var>
<var>${nome_produto}</var>
<arg>${AUTH_TOKEN}</arg>
<doc>Cadastra um produto válido. Se o nome não for passado, gera um automaticamente.
Requer um token de autenticação como argumento.</doc>
<status status="PASS" start="2025-10-03T02:03:38.716557" elapsed="0.154096"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.871405" level="INFO">${produto_id} = ClRD0RDr9FurzJzx</msg>
<var>${produto_id}</var>
<arg>${response_produto.json()['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:38.870953" elapsed="0.000478"/>
</kw>
<kw name="Gerar Token Usuário Comum" owner="login">
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.872699" level="INFO">${timestamp} = 1759467818</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:38.872545" elapsed="0.000178"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.873007" level="INFO">${microseconds} = 872955</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:38.872816" elapsed="0.000215"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.873320" level="INFO">${random} = 8276</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:38.873126" elapsed="0.000218"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.873603" level="INFO">${unique_email} = qa17594678188729558276@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:38.873437" elapsed="0.000188"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T02:03:38.873667" elapsed="0.000029"/>
</return>
<msg time="2025-10-03T02:03:38.873796" level="INFO">${email} = qa17594678188729558276@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T02:03:38.872347" elapsed="0.001471"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:38.874190" level="INFO">${payload} = {'nome': 'Usuario Comum', 'email': 'qa17594678188729558276@exemplo.com', 'password': '12345', 'administrador': 'false'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:38.873912" elapsed="0.000304"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:39.020556" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '119', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Comum", "email": "qa17594678188729558276@exemplo.com", "password": "12345", "administrador": "false"}' 
 </msg>
<msg time="2025-10-03T02:03:39.020631" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:38 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "yOVYLkMBoVwhuSex"
} 
 </msg>
<msg time="2025-10-03T02:03:39.020743" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:38.874315" elapsed="0.146452"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.021303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:39.020901" elapsed="0.000451"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:39.021447" elapsed="0.000399"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:39.021955" elapsed="0.000391"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:39.022449" elapsed="0.000354"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T02:03:39.022972" level="INFO">${USER_EMAIL} = qa17594678188729558276@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T02:03:39.022854" elapsed="0.000140"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T02:03:39.023130" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T02:03:39.023031" elapsed="0.000120"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T02:03:39.023188" elapsed="0.000029"/>
</return>
<msg time="2025-10-03T02:03:39.023358" level="INFO">${response_user} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T02:03:39.023394" level="INFO">${email} = qa17594678188729558276@exemplo.com</msg>
<var>${response_user}</var>
<var>${email}</var>
<arg>Usuario Comum</arg>
<arg>false</arg>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T02:03:38.872043" elapsed="0.151371"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.023762" level="INFO">${login_data} = {'email': 'qa17594678188729558276@exemplo.com', 'password': '12345'}</msg>
<var>${login_data}</var>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:39.023532" elapsed="0.000255"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:39.170385" level="INFO">POST Request : url=http://13.218.59.237:3000/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"email": "qa17594678188729558276@exemplo.com", "password": "12345"}' 
 </msg>
<msg time="2025-10-03T02:03:39.170469" level="INFO">POST Response : url=http://13.218.59.237:3000/login 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '293', 'Date': 'Fri, 03 Oct 2025 05:03:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxODg3Mjk1NTgyNzZAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE5LCJleHAiOjE3NTk0Njg0MTl9.NTHTOo5CNQR7KdyUlVNvxALVqWqoJIITUsc5LU4gCPQ"
} 
 </msg>
<msg time="2025-10-03T02:03:39.170660" level="INFO">${response_login} = &lt;Response [200]&gt;</msg>
<var>${response_login}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${login_data}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:39.023964" elapsed="0.146740"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.171413" level="INFO">${token_user} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxODg3Mjk1NTgyNzZAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE5LCJleHAiOjE3NTk0Njg0MTl9.NTHTOo5CNQR7KdyUlVNvxAL...</msg>
<var>${token_user}</var>
<arg>${response_login.json()['authorization']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:39.170861" elapsed="0.000586"/>
</kw>
<return>
<value>${token_user}</value>
<status status="PASS" start="2025-10-03T02:03:39.171505" elapsed="0.000033"/>
</return>
<msg time="2025-10-03T02:03:39.171663" level="INFO">${token_user} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxODg3Mjk1NTgyNzZAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE5LCJleHAiOjE3NTk0Njg0MTl9.NTHTOo5CNQR7KdyUlVNvxAL...</msg>
<var>${token_user}</var>
<doc>Gera token de usuário não administrador</doc>
<status status="PASS" start="2025-10-03T02:03:38.871765" elapsed="0.299921"/>
</kw>
<kw name="Adicionar Produto Existente no Carrinho" owner="carrinho">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.172597" level="INFO">${produto_item} = {'idProduto': 'ClRD0RDr9FurzJzx', 'quantidade': '1'}</msg>
<var>${produto_item}</var>
<arg>idProduto=${produto_id}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:39.172369" elapsed="0.000254"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.172852" level="INFO">${produtos_array} = [{'idProduto': 'ClRD0RDr9FurzJzx', 'quantidade': '1'}]</msg>
<var>${produtos_array}</var>
<arg>${produto_item}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-10-03T02:03:39.172718" elapsed="0.000158"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.173144" level="INFO">${payload} = {'produtos': [{'idProduto': 'ClRD0RDr9FurzJzx', 'quantidade': '1'}]}</msg>
<var>${payload}</var>
<arg>produtos=${produtos_array}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:39.172968" elapsed="0.000200"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.173430" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxODg3Mjk1NTgyNzZAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE5LCJleHAiOjE3NTk0Njg0MTl9.NTHT...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:39.173266" elapsed="0.000189"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:39.325188" level="INFO">POST Request : url=http://13.218.59.237:3000/carrinhos 
 path_url=/carrinhos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxODg3Mjk1NTgyNzZAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE5LCJleHAiOjE3NTk0Njg0MTl9.NTHTOo5CNQR7KdyUlVNvxALVqWqoJIITUsc5LU4gCPQ', 'Content-Length': '68', 'Content-Type': 'application/json'} 
 body=b'{"produtos": [{"idProduto": "ClRD0RDr9FurzJzx", "quantidade": "1"}]}' 
 </msg>
<msg time="2025-10-03T02:03:39.325270" level="INFO">POST Response : url=http://13.218.59.237:3000/carrinhos 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "hhRAdNPIGeT7uGuH"
} 
 </msg>
<msg time="2025-10-03T02:03:39.325494" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/carrinhos</arg>
<arg>json=${payload}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:39.173543" elapsed="0.151994"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.326723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:39.326053" elapsed="0.000740"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:39.326934" elapsed="0.000555"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*realizado.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:39.327631" elapsed="0.000460"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:39.328175" elapsed="0.000040"/>
</return>
<msg time="2025-10-03T02:03:39.328372" level="INFO">${response_carrinho} = &lt;Response [201]&gt;</msg>
<var>${response_carrinho}</var>
<arg>${token_user}</arg>
<arg>${produto_id}</arg>
<doc>Adiciona um produto existente ao carrinho de um usuário</doc>
<status status="PASS" start="2025-10-03T02:03:39.172037" elapsed="0.156362"/>
</kw>
<kw name="Excluir Produto com Carrinho" owner="produto">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.329712" level="INFO">${headers} = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjg5NTE2ODYxMzRAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.vTzk...</msg>
<var>${headers}</var>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:39.329466" elapsed="0.000340"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:39.476676" level="INFO">DELETE Request : url=http://13.218.59.237:3000/produtos/ClRD0RDr9FurzJzx 
 path_url=/produtos/ClRD0RDr9FurzJzx 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InFhMTc1OTQ2NzgxNjg5NTE2ODYxMzRAZXhlbXBsby5jb20iLCJwYXNzd29yZCI6IjEyMzQ1IiwiaWF0IjoxNzU5NDY3ODE3LCJleHAiOjE3NTk0Njg0MTd9.vTzkpEiyJkMG0fOwaHeG8ci9lTcr8YQItyMVaXV5744', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-10-03T02:03:39.476752" level="INFO">DELETE Response : url=http://13.218.59.237:3000/produtos/ClRD0RDr9FurzJzx 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '135', 'Date': 'Fri, 03 Oct 2025 05:03:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Não é permitido excluir produto que faz parte de carrinho",
    "idCarrinhos": [
        "hhRAdNPIGeT7uGuH"
    ]
} 
 </msg>
<msg time="2025-10-03T02:03:39.476863" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos/${produto_id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=400</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:39.329933" elapsed="0.146954"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.477427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:39.477017" elapsed="0.000459"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)não.*permitido.*excluir.*produto.*carrinho</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:39.477577" elapsed="0.000483"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:39.478112" elapsed="0.000032"/>
</return>
<arg>${produto_id}</arg>
<arg>${AUTH_TOKEN}</arg>
<doc>Exclui um produto que está em um carrinho.
Requer o ID do produto e um token de autenticação.</doc>
<status status="PASS" start="2025-10-03T02:03:39.329072" elapsed="0.149169"/>
</kw>
<doc>Testa que não é possível excluir um produto que está em um carrinho</doc>
<tag>exclusão</tag>
<tag>negativo</tag>
<tag>produto</tag>
<status status="PASS" start="2025-10-03T02:03:38.716000" elapsed="0.762540"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-10-03T02:03:39.479440" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-10-03T02:03:39.479358" elapsed="0.000146"/>
</kw>
<doc>Testes de ações com Produtos.</doc>
<status status="PASS" start="2025-10-03T02:03:36.881201" elapsed="2.598334"/>
</suite>
<suite id="s1-s4" name="Usuarios" source="D:\Documentos\COMPASS\serverest-web-robot\tests\usuarios.robot">
<kw name="Create Session" owner="RequestsLibrary" type="SETUP">
<msg time="2025-10-03T02:03:39.485073" level="INFO">Creating Session using : alias=serverest, url=http://13.218.59.237:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>serverest</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-10-03T02:03:39.484929" elapsed="0.000290"/>
</kw>
<test id="s1-s4-t1" name="Cenário 01: Cadastro de Usuário Válido" line="11">
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.486623" level="INFO">${timestamp} = 1759467819</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:39.486431" elapsed="0.000223"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.487017" level="INFO">${microseconds} = 486956</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:39.486760" elapsed="0.000284"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.487341" level="INFO">${random} = 8097</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:39.487147" elapsed="0.000220"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.487637" level="INFO">${unique_email} = qa17594678194869568097@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:39.487462" elapsed="0.000197"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T02:03:39.487703" elapsed="0.000037"/>
</return>
<msg time="2025-10-03T02:03:39.487857" level="INFO">${email} = qa17594678194869568097@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T02:03:39.486224" elapsed="0.001655"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.488347" level="INFO">${payload} = {'nome': 'QA User Automated', 'email': 'qa17594678194869568097@exemplo.com', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:39.488009" elapsed="0.000390"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:39.781112" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '122', 'Content-Type': 'application/json'} 
 body=b'{"nome": "QA User Automated", "email": "qa17594678194869568097@exemplo.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T02:03:39.781197" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "0ciYhYV4XgZCMKUt"
} 
 </msg>
<msg time="2025-10-03T02:03:39.781394" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:39.488772" elapsed="0.292647"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.782131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:39.781591" elapsed="0.000615"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:39.782361" elapsed="0.000512"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:39.782998" elapsed="0.000424"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:39.783545" elapsed="0.000370"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T02:03:39.784082" level="INFO">${USER_EMAIL} = qa17594678194869568097@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T02:03:39.783970" elapsed="0.000136"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T02:03:39.784239" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T02:03:39.784145" elapsed="0.000117"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T02:03:39.784299" elapsed="0.000029"/>
</return>
<msg time="2025-10-03T02:03:39.784467" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<msg time="2025-10-03T02:03:39.784501" level="INFO">${email} = qa17594678194869568097@exemplo.com</msg>
<var>${response}</var>
<var>${email}</var>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T02:03:39.485890" elapsed="0.298639"/>
</kw>
<variable name="${USER_ID}" scope="SUITE">
<msg time="2025-10-03T02:03:39.785114" level="INFO">${USER_ID} = 0ciYhYV4XgZCMKUt</msg>
<var>${response.json()['_id']}</var>
<status status="PASS" start="2025-10-03T02:03:39.784734" elapsed="0.000410"/>
</variable>
<variable name="${VALID_EMAIL}" scope="SUITE">
<msg time="2025-10-03T02:03:39.785444" level="INFO">${VALID_EMAIL} = qa17594678194869568097@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T02:03:39.785336" elapsed="0.000133"/>
</variable>
<doc>Testa o cadastro de um usuário com todos os campos válidos</doc>
<tag>critico</tag>
<tag>positivo</tag>
<status status="PASS" start="2025-10-03T02:03:39.485288" elapsed="0.300472"/>
</test>
<test id="s1-s4-t2" name="Cenário 02: Cadastro com E-mail Duplicado" line="18">
<kw name="Cadastrar Usuário Com E-mail Duplicado" owner="usuario">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.788044" level="INFO">${payload} = {'nome': 'Outro Usuario', 'email': 'qa17594678194869568097@exemplo.com', 'password': '12345', 'administrador': 'false'}</msg>
<var>${payload}</var>
<arg>nome=Outro Usuario</arg>
<arg>email=${email_existente}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:39.787789" elapsed="0.000286"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:39.937233" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '119', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Outro Usuario", "email": "qa17594678194869568097@exemplo.com", "password": "12345", "administrador": "false"}' 
 </msg>
<msg time="2025-10-03T02:03:39.937313" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '53', 'Date': 'Fri, 03 Oct 2025 05:03:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg time="2025-10-03T02:03:39.937427" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:39.788183" elapsed="0.149270"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.937994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:39.937584" elapsed="0.000462"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:39.938157" elapsed="0.000441"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)já.*sendo usado</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:39.938713" elapsed="0.000438"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:39.939206" elapsed="0.000033"/>
</return>
<arg>${VALID_EMAIL}</arg>
<doc>Tenta cadastrar usuário com email duplicado</doc>
<status status="PASS" start="2025-10-03T02:03:39.787467" elapsed="0.151866"/>
</kw>
<doc>Testa que não é possível cadastrar usuário com e-mail já existente</doc>
<tag>critico</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-10-03T02:03:39.786838" elapsed="0.152781"/>
</test>
<test id="s1-s4-t3" name="Cenário 03: Cadastro com E-mail Inválido" line="23">
<kw name="Cadastrar Usuário Com E-mail Inválido" owner="usuario">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:39.941305" level="INFO">${payload} = {'nome': 'Usuario Teste', 'email': 'qateste', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=Usuario Teste</arg>
<arg>email=${email_invalido}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:39.941060" elapsed="0.000274"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:40.089257" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '91', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Teste", "email": "qateste", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T02:03:40.089402" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '50', 'Date': 'Fri, 03 Oct 2025 05:03:39 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "email": "email deve ser um email válido"
} 
 </msg>
<msg time="2025-10-03T02:03:40.089530" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:39.941441" elapsed="0.148114"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.090166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:40.089711" elapsed="0.000524"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:40.090398" elapsed="0.000571"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:40.091098" elapsed="0.000433"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['email']}</arg>
<arg>(?i)email.*válido</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:40.091639" elapsed="0.000444"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:40.092138" elapsed="0.000034"/>
</return>
<arg>${INVALID_EMAIL}</arg>
<doc>Tenta cadastrar usuário com email inválido</doc>
<status status="PASS" start="2025-10-03T02:03:39.940771" elapsed="0.151497"/>
</kw>
<doc>Testa que não é possível cadastrar usuário com formato de e-mail inválido</doc>
<tag>alto</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-10-03T02:03:39.940184" elapsed="0.152375"/>
</test>
<test id="s1-s4-t4" name="Cenário 04: Cadastro com Senha Muito Curta" line="28">
<kw name="Cadastrar Usuário Com Senha Inválida" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.094315" level="INFO">${timestamp} = 1759467820</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:40.094147" elapsed="0.000194"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.094676" level="INFO">${microseconds} = 94622</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:40.094452" elapsed="0.000248"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.094974" level="INFO">${random} = 4248</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:40.094792" elapsed="0.000205"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.095259" level="INFO">${unique_email} = qa1759467820946224248@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:40.095087" elapsed="0.000198"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T02:03:40.095327" elapsed="0.000145"/>
</return>
<msg time="2025-10-03T02:03:40.095626" level="INFO">${email} = qa1759467820946224248@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T02:03:40.093885" elapsed="0.001767"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.096036" level="INFO">${payload} = {'nome': 'Usuario Senha Invalida', 'email': 'qa1759467820946224248@exemplo.com', 'password': '1234', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=Usuario Senha Invalida</arg>
<arg>email=${email}</arg>
<arg>password=${senha_invalida}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:40.095768" elapsed="0.000295"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:40.244537" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '125', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Senha Invalida", "email": "qa1759467820946224248@exemplo.com", "password": "1234", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T02:03:40.244615" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "9nkwVzB5ykbDWYSR"
} 
 </msg>
<msg time="2025-10-03T02:03:40.244746" level="FAIL">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-03T02:03:40.096177" elapsed="0.161955">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.258298" elapsed="0.000027"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.258438" elapsed="0.000020"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>password</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.258536" elapsed="0.000016"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['password']}</arg>
<arg>${regex_esperado}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.258629" elapsed="0.000016"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-03T02:03:40.258738" elapsed="0.000019"/>
</return>
<arg>${SHORT_PASSWORD}</arg>
<arg>(?i)mínimo|minim|5</arg>
<doc>Tenta cadastrar usuário com senha inválida</doc>
<status status="FAIL" start="2025-10-03T02:03:40.093573" elapsed="0.165291">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<doc>Testa que não é possível cadastrar usuário com senha menor que 5 caracteres</doc>
<tag>alto</tag>
<tag>bva</tag>
<tag>negativo</tag>
<status status="FAIL" start="2025-10-03T02:03:40.093028" elapsed="0.166187">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</test>
<test id="s1-s4-t5" name="Cenário 05: Cadastro com Senha Muito Longa" line="33">
<kw name="Cadastrar Usuário Com Senha Inválida" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.261154" level="INFO">${timestamp} = 1759467820</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:40.260978" elapsed="0.000203"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.261480" level="INFO">${microseconds} = 261427</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:40.261276" elapsed="0.000228"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.261773" level="INFO">${random} = 6361</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:40.261594" elapsed="0.000202"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.262064" level="INFO">${unique_email} = qa17594678202614276361@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:40.261884" elapsed="0.000202"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T02:03:40.262129" elapsed="0.000032"/>
</return>
<msg time="2025-10-03T02:03:40.262264" level="INFO">${email} = qa17594678202614276361@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T02:03:40.260770" elapsed="0.001515"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.262595" level="INFO">${payload} = {'nome': 'Usuario Senha Invalida', 'email': 'qa17594678202614276361@exemplo.com', 'password': '12345678901', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=Usuario Senha Invalida</arg>
<arg>email=${email}</arg>
<arg>password=${senha_invalida}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:40.262376" elapsed="0.000243"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:40.409842" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '133', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Senha Invalida", "email": "qa17594678202614276361@exemplo.com", "password": "12345678901", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T02:03:40.409926" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "6aK99WhfDWKlbvkX"
} 
 </msg>
<msg time="2025-10-03T02:03:40.410036" level="FAIL">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-03T02:03:40.262711" elapsed="0.148337">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.411229" elapsed="0.000025"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.411349" elapsed="0.000020"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>password</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.411446" elapsed="0.000016"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['password']}</arg>
<arg>${regex_esperado}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.411540" elapsed="0.000017"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-03T02:03:40.411596" elapsed="0.000016"/>
</return>
<arg>${LONG_PASSWORD}</arg>
<arg>(?i)máximo|maxim|10</arg>
<doc>Tenta cadastrar usuário com senha inválida</doc>
<status status="FAIL" start="2025-10-03T02:03:40.260413" elapsed="0.151294">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<doc>Testa que não é possível cadastrar usuário com senha maior que 10 caracteres</doc>
<tag>alto</tag>
<tag>bva</tag>
<tag>negativo</tag>
<status status="FAIL" start="2025-10-03T02:03:40.259814" elapsed="0.152238">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</test>
<test id="s1-s4-t6" name="Cenário 06: Cadastro com E-mail Gmail Bloqueado" line="38">
<kw name="Cadastrar Usuário Com Domínio Bloqueado" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.413707" level="INFO">${timestamp} = 1759467820</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:40.413535" elapsed="0.000198"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.413982" level="INFO">${email} = teste1759467820@gmail.com</msg>
<var>${email}</var>
<arg>teste${timestamp}${dominio}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:40.413829" elapsed="0.000176"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.414324" level="INFO">${payload} = {'nome': 'Usuario Dominio Bloqueado', 'email': 'teste1759467820@gmail.com', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=Usuario Dominio Bloqueado</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:40.414098" elapsed="0.000251"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:40.563878" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '121', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Dominio Bloqueado", "email": "teste1759467820@gmail.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T02:03:40.563958" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ETfRV1qz9KZHZ1te"
} 
 </msg>
<msg time="2025-10-03T02:03:40.564069" level="FAIL">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-03T02:03:40.414517" elapsed="0.150501">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.565191" elapsed="0.000039"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.565328" elapsed="0.000019"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.565425" elapsed="0.000017"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['email']}</arg>
<arg>(?i)não.*permitid|bloquead|domínio</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.565519" elapsed="0.000017"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-03T02:03:40.565579" elapsed="0.000016"/>
</return>
<arg>@gmail.com</arg>
<doc>Tenta cadastrar usuário com domínio bloqueado</doc>
<status status="FAIL" start="2025-10-03T02:03:40.413286" elapsed="0.152403">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<doc>Testa que não é possível cadastrar usuário com domínio gmail.com</doc>
<tag>medio</tag>
<tag>negativo</tag>
<status status="FAIL" start="2025-10-03T02:03:40.412702" elapsed="0.153317">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</test>
<test id="s1-s4-t7" name="Cenário 07: Cadastro com E-mail Hotmail Bloqueado" line="43">
<kw name="Cadastrar Usuário Com Domínio Bloqueado" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.567524" level="INFO">${timestamp} = 1759467820</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:40.567351" elapsed="0.000201"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.567804" level="INFO">${email} = teste1759467820@hotmail.com</msg>
<var>${email}</var>
<arg>teste${timestamp}${dominio}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:40.567646" elapsed="0.000182"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.568148" level="INFO">${payload} = {'nome': 'Usuario Dominio Bloqueado', 'email': 'teste1759467820@hotmail.com', 'password': '12345', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=Usuario Dominio Bloqueado</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:40.567921" elapsed="0.000252"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:40.716427" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '123', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Dominio Bloqueado", "email": "teste1759467820@hotmail.com", "password": "12345", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T02:03:40.716514" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "QydZWjU8yYciwuhK"
} 
 </msg>
<msg time="2025-10-03T02:03:40.716623" level="FAIL">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-10-03T02:03:40.568266" elapsed="0.149494">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.717966" elapsed="0.000031"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.718105" elapsed="0.000023"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.718214" elapsed="0.000018"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['email']}</arg>
<arg>(?i)não.*permitid|bloquead|domínio</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" start="2025-10-03T02:03:40.718323" elapsed="0.000018"/>
</kw>
<return>
<value>${response}</value>
<status status="NOT RUN" start="2025-10-03T02:03:40.718389" elapsed="0.000018"/>
</return>
<arg>@hotmail.com</arg>
<doc>Tenta cadastrar usuário com domínio bloqueado</doc>
<status status="FAIL" start="2025-10-03T02:03:40.567100" elapsed="0.151424">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</kw>
<doc>Testa que não é possível cadastrar usuário com domínio hotmail.com</doc>
<tag>medio</tag>
<tag>negativo</tag>
<status status="FAIL" start="2025-10-03T02:03:40.566531" elapsed="0.152314">Url: http://13.218.59.237:3000/usuarios Expected status: 201 != 400</status>
</test>
<test id="s1-s4-t8" name="Cenário 08: Cadastro com Campos Vazios" line="48">
<kw name="Cadastrar Usuário Com Campos Vazios" owner="usuario">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.721383" level="INFO">${payload} = {'nome': '', 'email': '', 'password': '', 'administrador': 'true'}</msg>
<var>${payload}</var>
<arg>nome=${EMPTY}</arg>
<arg>email=${EMPTY}</arg>
<arg>password=${EMPTY}</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:40.720288" elapsed="0.001129"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:40.871440" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '66', 'Content-Type': 'application/json'} 
 body=b'{"nome": "", "email": "", "password": "", "administrador": "true"}' 
 </msg>
<msg time="2025-10-03T02:03:40.871527" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '150', 'Date': 'Fri, 03 Oct 2025 05:03:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "nome": "nome não pode ficar em branco",
    "email": "email não pode ficar em branco",
    "password": "password não pode ficar em branco"
} 
 </msg>
<msg time="2025-10-03T02:03:40.871652" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:40.721545" elapsed="0.150133"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.872271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:40.871834" elapsed="0.000495"/>
</kw>
<kw name="Dictionary Should Not Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:40.872457" elapsed="0.000440"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>nome</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:40.873006" elapsed="0.000391"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:40.873501" elapsed="0.000413"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>password</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:40.874095" elapsed="0.000560"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:40.874737" elapsed="0.000047"/>
</return>
<doc>Tenta cadastrar usuário com campos obrigatórios vazios</doc>
<status status="PASS" start="2025-10-03T02:03:40.720045" elapsed="0.154868"/>
</kw>
<doc>Testa que não é possível cadastrar usuário com campos obrigatórios vazios</doc>
<tag>medio</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-10-03T02:03:40.719447" elapsed="0.155755"/>
</test>
<test id="s1-s4-t9" name="Cenário 09: Cadastro com Senha no Limite Mínimo Válido" line="53">
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.877001" level="INFO">${timestamp} = 1759467820</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:40.876822" elapsed="0.000208"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.877348" level="INFO">${microseconds} = 877292</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:40.877129" elapsed="0.000243"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.877653" level="INFO">${random} = 1018</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:40.877466" elapsed="0.000210"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.877957" level="INFO">${unique_email} = qa17594678208772921018@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:40.877781" elapsed="0.000200"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T02:03:40.878025" elapsed="0.000036"/>
</return>
<msg time="2025-10-03T02:03:40.878170" level="INFO">${email} = qa17594678208772921018@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T02:03:40.876608" elapsed="0.001584"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:40.878563" level="INFO">${payload} = {'nome': 'Usuario Limite Min', 'email': 'qa17594678208772921018@exemplo.com', 'password': '12345', 'administrador': 'false'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:40.878290" elapsed="0.000298"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:41.025923" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '124', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Limite Min", "email": "qa17594678208772921018@exemplo.com", "password": "12345", "administrador": "false"}' 
 </msg>
<msg time="2025-10-03T02:03:41.026001" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:40 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "d8jYO0M59Bl40GqP"
} 
 </msg>
<msg time="2025-10-03T02:03:41.026179" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:40.878688" elapsed="0.147516"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:41.026770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:41.026344" elapsed="0.000480"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:41.026932" elapsed="0.000438"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:41.027475" elapsed="0.000390"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:41.027963" elapsed="0.000358"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T02:03:41.028489" level="INFO">${USER_EMAIL} = qa17594678208772921018@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T02:03:41.028375" elapsed="0.000137"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T02:03:41.028645" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T02:03:41.028550" elapsed="0.000117"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T02:03:41.028704" elapsed="0.000029"/>
</return>
<arg>Usuario Limite Min</arg>
<arg>false</arg>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T02:03:40.876282" elapsed="0.152563"/>
</kw>
<doc>Testa cadastro com senha de exatamente 5 caracteres (limite mínimo válido)</doc>
<tag>bva</tag>
<tag>positivo</tag>
<status status="PASS" start="2025-10-03T02:03:40.875644" elapsed="0.153491"/>
</test>
<test id="s1-s4-t10" name="Cenário 10: Cadastro com Senha no Limite Máximo Válido" line="58">
<kw name="Cadastrar Usuário Válido" owner="usuario">
<kw name="Gerar Email Unico" owner="usuario">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-10-03T02:03:41.031148" level="INFO">${timestamp} = 1759467821</msg>
<var>${timestamp}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-10-03T02:03:41.030977" elapsed="0.000199"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:41.031489" level="INFO">${microseconds} = 31424</msg>
<var>${microseconds}</var>
<arg>int(time.time() * 1000000) % 1000000</arg>
<arg>modules=time</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:41.031272" elapsed="0.000241"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-10-03T02:03:41.031788" level="INFO">${random} = 5461</msg>
<var>${random}</var>
<arg>random.randint(1000, 9999)</arg>
<arg>modules=random</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-10-03T02:03:41.031609" elapsed="0.000202"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-10-03T02:03:41.032069" level="INFO">${unique_email} = qa1759467821314245461@exemplo.com</msg>
<var>${unique_email}</var>
<arg>qa${timestamp}${microseconds}${random}@exemplo.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-10-03T02:03:41.031900" elapsed="0.000191"/>
</kw>
<return>
<value>${unique_email}</value>
<status status="PASS" start="2025-10-03T02:03:41.032133" elapsed="0.000031"/>
</return>
<msg time="2025-10-03T02:03:41.032267" level="INFO">${email} = qa1759467821314245461@exemplo.com</msg>
<var>${email}</var>
<doc>Gera um e-mail único baseado no timestamp com milissegundos.</doc>
<status status="PASS" start="2025-10-03T02:03:41.030762" elapsed="0.001525"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:41.032651" level="INFO">${payload} = {'nome': 'Usuario Limite Max', 'email': 'qa1759467821314245461@exemplo.com', 'password': '12345', 'administrador': 'false'}</msg>
<var>${payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=${administrador}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:41.032379" elapsed="0.000297"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:41.179927" level="INFO">POST Request : url=http://13.218.59.237:3000/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '123', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Usuario Limite Max", "email": "qa1759467821314245461@exemplo.com", "password": "12345", "administrador": "false"}' 
 </msg>
<msg time="2025-10-03T02:03:41.180004" level="INFO">POST Response : url=http://13.218.59.237:3000/usuarios 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:41 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "HYqIOfmrZy1t04Fk"
} 
 </msg>
<msg time="2025-10-03T02:03:41.180117" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:41.032772" elapsed="0.147368"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:41.181426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:41.180273" elapsed="0.001218"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:41.181617" elapsed="0.000420"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:41.182138" elapsed="0.000386"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:41.182621" elapsed="0.000358"/>
</kw>
<variable name="${USER_EMAIL}" scope="SUITE">
<msg time="2025-10-03T02:03:41.183147" level="INFO">${USER_EMAIL} = qa1759467821314245461@exemplo.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-10-03T02:03:41.183032" elapsed="0.000205"/>
</variable>
<variable name="${USER_PASS}" scope="SUITE">
<msg time="2025-10-03T02:03:41.183392" level="INFO">${USER_PASS} = 12345</msg>
<var>${VALID_PASSWORD}</var>
<status status="PASS" start="2025-10-03T02:03:41.183292" elapsed="0.000122"/>
</variable>
<return>
<value>${response}</value>
<value>${email}</value>
<status status="PASS" start="2025-10-03T02:03:41.183451" elapsed="0.000030"/>
</return>
<arg>Usuario Limite Max</arg>
<arg>false</arg>
<doc>Cadastra usuário válido e retorna dados</doc>
<status status="PASS" start="2025-10-03T02:03:41.030385" elapsed="0.153206"/>
</kw>
<doc>Testa cadastro com senha de exatamente 10 caracteres (limite máximo válido)</doc>
<tag>bva</tag>
<tag>positivo</tag>
<status status="PASS" start="2025-10-03T02:03:41.029706" elapsed="0.154316"/>
</test>
<test id="s1-s4-t11" name="Cenário 11: Buscar Usuário Inexistente" line="63">
<kw name="Buscar Usuário Inexistente" owner="usuario">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:41.331739" level="INFO">GET Request : url=http://13.218.59.237:3000/usuarios/0000000000000000 
 path_url=/usuarios/0000000000000000 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-10-03T02:03:41.331821" level="INFO">GET Response : url=http://13.218.59.237:3000/usuarios/0000000000000000 
 status=400, reason=Bad Request 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '45', 'Date': 'Fri, 03 Oct 2025 05:03:41 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Usuário não encontrado"
} 
 </msg>
<msg time="2025-10-03T02:03:41.331937" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${user_id_inexistente}</arg>
<arg>expected_status=400</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:41.185343" elapsed="0.146629"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:41.332514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:41.332108" elapsed="0.000458"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:41.332675" elapsed="0.000428"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)usuário.*não.*encontrad</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:41.333213" elapsed="0.000447"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:41.333715" elapsed="0.000034"/>
</return>
<arg>0000000000000000</arg>
<doc>Tenta buscar usuário inexistente</doc>
<status status="PASS" start="2025-10-03T02:03:41.185044" elapsed="0.148802"/>
</kw>
<doc>Testa que não é possível buscar um usuário inexistente (16 caracteres alfanuméricos)</doc>
<tag>medio</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-10-03T02:03:41.184467" elapsed="0.149666"/>
</test>
<test id="s1-s4-t12" name="Cenário 12: Deletar Usuário" line="68">
<kw name="Deletar Usuário" owner="usuario">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:41.487874" level="INFO">DELETE Request : url=http://13.218.59.237:3000/usuarios/0ciYhYV4XgZCMKUt 
 path_url=/usuarios/0ciYhYV4XgZCMKUt 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-10-03T02:03:41.487954" level="INFO">DELETE Response : url=http://13.218.59.237:3000/usuarios/0ciYhYV4XgZCMKUt 
 status=200, reason=OK 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '51', 'Date': 'Fri, 03 Oct 2025 05:03:41 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg time="2025-10-03T02:03:41.488071" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${user_id}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:41.335286" elapsed="0.152809"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:41.488659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:41.488228" elapsed="0.000484"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:41.488829" elapsed="0.000454"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)registro.*excluído.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:41.489404" elapsed="0.000416"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:41.489885" elapsed="0.000039"/>
</return>
<arg>${USER_ID}</arg>
<doc>Deleta um usuário existente</doc>
<status status="PASS" start="2025-10-03T02:03:41.335035" elapsed="0.155002"/>
</kw>
<doc>Testa a deleção do usuário criado no primeiro cenário</doc>
<tag>critico</tag>
<tag>positivo</tag>
<status status="PASS" start="2025-10-03T02:03:41.334564" elapsed="0.155699"/>
</test>
<test id="s1-s4-t13" name="Cenário 13: Atualizar Usuário Inexistente" line="72">
<kw name="Atualizar Usuário com ID Inexistente" owner="usuario">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-10-03T02:03:41.492276" level="INFO">${payload} = {'nome': 'Nome Atualizado', 'email': 'qa17594678194869568097@exemplo.com', 'password': '12345', 'administrador': 'false'}</msg>
<var>${payload}</var>
<arg>nome=${novo_nome}</arg>
<arg>email=${VALID_EMAIL}</arg>
<arg>password=${VALID_PASSWORD}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-10-03T02:03:41.492002" elapsed="0.000304"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2025-10-03T02:03:41.640578" level="INFO">PUT Request : url=http://13.218.59.237:3000/usuarios/0000000000000000 
 path_url=/usuarios/0000000000000000 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '121', 'Content-Type': 'application/json'} 
 body=b'{"nome": "Nome Atualizado", "email": "qa17594678194869568097@exemplo.com", "password": "12345", "administrador": "false"}' 
 </msg>
<msg time="2025-10-03T02:03:41.640805" level="INFO">PUT Response : url=http://13.218.59.237:3000/usuarios/0000000000000000 
 status=201, reason=Created 
 headers={'Access-Control-Allow-Origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '82', 'Date': 'Fri, 03 Oct 2025 05:03:41 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "3QilH3y9RW4Co6T0"
} 
 </msg>
<msg time="2025-10-03T02:03:41.640954" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${user_id_inexistente}</arg>
<arg>json=${payload}</arg>
<arg>expected_status=201</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-10-03T02:03:41.492412" elapsed="0.148568"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-10-03T02:03:41.641641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-10-03T02:03:41.641143" elapsed="0.000578"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>message</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-10-03T02:03:41.641865" elapsed="0.000453"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${response.json()['message']}</arg>
<arg>(?i)cadastro.*sucesso</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" start="2025-10-03T02:03:41.642430" elapsed="0.000389"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-10-03T02:03:41.642878" elapsed="0.000036"/>
</return>
<arg>0000000000000000</arg>
<doc>Testa atualizar um usuário inexistente e cria novo usuário</doc>
<status status="PASS" start="2025-10-03T02:03:41.491737" elapsed="0.151274"/>
</kw>
<doc>Testa que não é possível atualizar um usuário inexistente (16 caracteres alfanuméricos) e cria novo usuário</doc>
<tag>medio</tag>
<tag>negativo</tag>
<status status="PASS" start="2025-10-03T02:03:41.491132" elapsed="0.152165"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-10-03T02:03:41.644033" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-10-03T02:03:41.643911" elapsed="0.000190"/>
</kw>
<doc>Testes de ações com Usuários.</doc>
<status status="FAIL" start="2025-10-03T02:03:39.480397" elapsed="2.163740"/>
</suite>
<status status="FAIL" start="2025-10-03T02:03:34.060392" elapsed="7.584681"/>
</suite>
<statistics>
<total>
<stat pass="21" fail="4" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">adicionar</stat>
<stat pass="3" fail="2" skip="0">alto</stat>
<stat pass="1" fail="0" skip="0">autenticação</stat>
<stat pass="2" fail="2" skip="0">bva</stat>
<stat pass="1" fail="0" skip="0">cadastro</stat>
<stat pass="1" fail="0" skip="0">cancelar</stat>
<stat pass="3" fail="0" skip="0">carrinho</stat>
<stat pass="1" fail="0" skip="0">concluir</stat>
<stat pass="4" fail="0" skip="0">critico</stat>
<stat pass="1" fail="0" skip="0">duplicidade</stat>
<stat pass="1" fail="0" skip="0">exclusão</stat>
<stat pass="1" fail="0" skip="0">listagem</stat>
<stat pass="3" fail="0" skip="0">login</stat>
<stat pass="3" fail="2" skip="0">medio</stat>
<stat pass="11" fail="4" skip="0">negativo</stat>
<stat pass="1" fail="0" skip="0">permissão</stat>
<stat pass="10" fail="0" skip="0">positivo</stat>
<stat pass="6" fail="0" skip="0">produto</stat>
</tag>
<suite>
<stat name="Tests" id="s1" pass="21" fail="4" skip="0">Tests</stat>
<stat name="Carrinho" id="s1-s1" pass="3" fail="0" skip="0">Tests.Carrinho</stat>
<stat name="Login" id="s1-s2" pass="3" fail="0" skip="0">Tests.Login</stat>
<stat name="Produtos" id="s1-s3" pass="6" fail="0" skip="0">Tests.Produtos</stat>
<stat name="Usuarios" id="s1-s4" pass="9" fail="4" skip="0">Tests.Usuarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
